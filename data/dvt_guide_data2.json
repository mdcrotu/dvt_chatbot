[
  {
    "id": "3da1544d-c4fc-4dd2-96e1-62a9710a72dd",
    "title": "Table of Contents | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/index.html",
    "section": "Table of Contents",
    "content": "Table of Contents Installation Checklist Install DVT Using a pre-packed Distribution Install DVT Using the Update Site Eclipse Version Java Version DVT Plug-in Set the License Predefined Projects Opening a Predefined Project Preferences Getting Started What is a Workspace What is a Project Create a New Project Import an Existing Project Automatic Create or Import Project Natures Workspace and Workbench Work Workspace Workbench Workspace Again Refresh Linked Resources Backup and Local History Basic Tutorial Switch to the DVT Perspective Open a Project Configure the Build Build the Project Inspect the Compilation Errors See Comments in Tooltips Use Hyperlinks to Move Around in the Code Quickly Open a Type (Class, Module, Interface) Quickly Inspect the Class Hierarchy Quickly Open a File Quickly Move Inside the Editor Inspect the Class Hierarchy and Class Members Inspect the Design Hierarchy Inspect the Verification Hierarchy Browse Through All the Available Types (Classes, Modules, Interfaces) Look for the Implementation of an Extern Function or Task Search for Entities Use Content Assist (Autocomplete) Use Code Templates Use Module Auto Instance Expand Macros (Apply Preprocessing) Trace Macro Errors Track Tasks using TODO Markers Quickly See the Current Scope in the Status Bar Fold Code Regions in Order to Improve Readability Access the Context Sensitive Help Build Configurations Non-top files default.build Auto-config Simulator Log-config Emulating compiler invocations Multiple .build Files Compatibility Modes List of Compatibility Modes How to Specify the Compatibility Mode Paths Strings Comments Environment Variables Including Other Argument Files Build Persistence DB Access Considerations DVT Auto-Linked Run a Script Before Build All Build Directives e Language Test Files e Language SPECMAN_PATH Adding VIPs to $SPECMAN_PATH using sn_which.sh SystemVerilog OVM or UVM Library Compilation Xilinx Libraries Compilation Precompilation support for Xilinx Libraries Intel(Altera) Quartus Libraries Compilation Precompilation support for Intel(Altera) Quartus Libraries Questa Libraries Compilation Use of External…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ab105a03-572e-4f8f-934f-d79a30f7cb15",
    "title": "I am using the Common Desktop Environment via Citrix and experiencing crashes. What can I do? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/i-am-using-the-common-desktop-environment-via-citrix-and-experiencing-crashes-what-can-i-do.html",
    "section": "I am using the Common Desktop Environment via Citrix and experiencing crashes. What can I do?",
    "content": "I am using the Common Desktop Environment via Citrix and experiencing crashes. What can I do? This seems to be a problem related to running Eclipse under CDE via Citrix. Try changing CDE to another Desktop Environment, like the Java Desktop System (JDS). How can I configure Eclipse to use a local CVS repository? How do I change the background color of the Editor?",
    "section_path": [],
    "tokens": 64,
    "source": "scraped"
  },
  {
    "id": "2cc5d7be-6058-492c-90f4-9600db8c4c28",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.20",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "0dc18c0d-7aeb-4d09-ab1b-2f61f36d08e4",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#22.1.4",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "36269dd4-5064-4a0b-ae32-eac52728a403",
    "title": "Vertical Alignment | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/code-formatting/vertical-alignment.html#vertical-align-patterns-ro-amiq-vlogdt-format-vertical-align-vregex",
    "section": "Vertical Alignment",
    "content": "Vertical Alignment When enabled, this option performs vertical alignment. Vertical Alignment Tokens (ro.amiq.vlogdt/format.vertical_align.tokens) The lines of code inside the same scope are aligned by the specified comma separated list of vertical alignment tokens. Vertical alignment is performed left to right, by the same token. For example assuming = and : as vertical align tokens: In order to use the comma character , as a vertical alignment token, the character must be preceded by the escaping character \\ . Before After (â:â token) Only consecutive lines (ro.amiq.vlogdt/format.vertical_align.consecutive_lines) - When enabled, only consecutive lines are vertically aligned. Two lines are consecutive if they follow each other or are separated by comment lines. Before After Vertical align single line comments (ro.amiq.vlogdt/format.vertical_align.sl_comments) - When enabled, single line comments are aligned. Before After Vertical align to open parenthesis (ro.amiq.vlogdt/format.vertical_align.paren) - When enabled, vertical align to open parenthesis. Before After Vertical align to open curly (ro.amiq.vlogdt/format.vertical_align.curly) - When enabled, vertical align to open curly. Before After Independent `ifdefs (ro.amiq.vlogdt/format.vertical_align.independent_ifdefs) - When enabled, `ifdefs are independent alignment scopes: Before After Vertical Align Patterns (ro.amiq.vlogdt/format.vertical_align.vregex) By Name Port Connections (VlogByNamePortConnections) - When enabled, this pattern aligns instance port connections by name: Before After Class Declarations (VlogClassDeclarationsGroupDimensions) - When enabled, this pattern aligns class parameters while excluding vertical alignment of dimensions: Before After Class Declarations (split dimensions) (VlogClassDeclarations) - When enabled, this pattern aligns class parameters while vertically aligning dimensions: Before After Class Variable Declarations (VlogClassVariableDeclarationsGroupDimensions) - When enabled, this pattern aligns class variable while excluding vertical alignment of dimensions: Before After Class Variable Declarations (split dimensions) (VlogClassVariableDeclarations) - When enabled, this pattern aligns class variables while vertically aligning dimensions: Before After `defines (VlogDefines) - When enabled, this pattern aligns `defines: Before After Function Declarations (VlogFunctionDeclarationsGroupDimensions) - When enabled, this pattern aligns function and task declarations while excluding vertical…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "dd7ee721-f398-470f-bc30-530fc3e3107e",
    "title": "Code Templates | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/code-templates/index.html",
    "section": "Code Templates",
    "content": "Code Templates Code Templates in Autocomplete Constraint Code Templates Method Code Templates Global Code Templates Project Level Code Templates Code Templates View Predefined Content Filters Code Templates in Autocomplete",
    "section_path": [],
    "tokens": 29,
    "source": "scraped"
  },
  {
    "id": "856fbd6c-bdb1-41ff-ba77-8d0217f23328",
    "title": "UVM Components Diagrams | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/diagrams/uvm-components-diagrams.html#component-diagrams-from-verification-hierarchy",
    "section": "UVM Components Diagrams",
    "content": "UVM Components Diagrams UVM Components Diagrams help you inspect and document the structure of a verification environment. You can create a component diagram in one of the following ways: Right - Click in the Verification Hierarchy View and select Show Diagram . This way is faster, but the generated diagram might not be completely accurate because itâs missing the runtime information. Generate the diagram using the simulator and open it in DVT. This way requires to run the simulation with some additional files compiled, but the generated diagram will be complete. The following operations are available in the Right - Click context menu: Go to Create Call Jump to the create call for the selected instance. Go to Type Jump to the declaration of the selected elementâs type. It is available for nodes and labeled edges. Component Diagrams from Verification Hierarchy To generate the Component Diagrams from the Verification Hierarchy View , Right - Click on an entry in the view and select Show Diagram . Component Diagrams from Simulation To generate the Component Diagrams from simulation, some additional arguments must be added to the build directives, depending on the simulator. IUS: â-f $DVT_HOME/libs/dvt_chs/dvt_chs.top.ius.fâ. When using -makelib/-endlib add â-f $DVT_HOME/libs/dvt_chs/dvt_chs.ius.fâ inside the library and â-top dvt_chs_moduleâ outside of it. VCS: â-f $DVT_HOME/libs/dvt_chs/dvt_chs.vcs.fâ Questa: â-f $DVT_HOME/libs/dvt_chs/dvt_chs.questa.fâ Note To generate diagrams for OVM environments, use the appropriate filelist from $DVT_HOME/libs/dvt_chs/ovm When the simulation starts, a component_hierarchy_of_<test_name>.chd will be generated in the working directory. Open the generated file in DVT to inspect the diagram. The location of the diagram can be changed by setting the DVT_CHS_FILE environment variable before running the simulation. export DVT_CHS_FILE=/path/to/a/components_diagram.chd # sh, bash setenv DVT_CHS_FILE /path/to/a/components_diagram.chd # csh, tcsh You can stop the test immediately after the diagram has been generated by setting the DVT_CHS_STOP_TEST environment variable before running…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "7ea36f88-adea-4b83-a6d5-606668650bff",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.4.16",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "593b94bd-679e-455e-aa95-dbb129574802",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.2",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "aebabe9d-6be4-4795-82c6-1359a5960b06",
    "title": "Implement Extern Constraint | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-fix-proposals/implement-extern-constraint.html",
    "section": "Implement Extern Constraint",
    "content": "Implement Extern Constraint An error or warning is triggered for extern constraints which are not implemented (explicit constraints trigger errors, while implicit ones trigger warnings). Place the editor cursor on the constraintâs line and press Ctrl + 1 , select Implement extern constraint â¦ from the list of quick fix proposals and press Enter . The extern constraint implementation is inserted outside the class scope. Tip You can change the constraint block by editing the Constraint Code Templates Note The implementation stub contains a TODO reminder which shows up the Tasks View. See Track Tasks using TODO Markers . Fully Qualify Type Implement Extern Method",
    "section_path": [],
    "tokens": 105,
    "source": "scraped"
  },
  {
    "id": "0821ab2d-29f6-4b83-90d9-d31f0da885a4",
    "title": "Add Signal to Sensitivity List | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-fix-proposals/add-signal-to-sensitivity-list.html",
    "section": "Add Signal to Sensitivity List",
    "content": "Add Signal to Sensitivity List When the sensitivity list of an always block is incomplete, warnings are triggered for all missing signals. Place the editor cursor on the warningâs line and press Ctrl + 1 , select Add signal â¦ to sensitivity list from the list of quick fix proposals and press Enter . Add Port to Module Add Virtual Qualifier to Interface Type",
    "section_path": [],
    "tokens": 64,
    "source": "scraped"
  },
  {
    "id": "7d7ce0ee-142f-46ab-8dd9-988a332f705c",
    "title": "Environment Variables | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/build-config/environment-variables.html",
    "section": "Environment Variables",
    "content": "Environment Variables To define an environment variable you can use the following syntax: + dvt_setenv +< NAME > [ = VALUE ] Examples +dvt_setenv+UVM_HOME=/uvm/uvm-1.1 +dvt_setenv+SPECMAN_PATH=$SPECMAN_PATH:/path/to/my/vips To use the value of an environment variable called ENV_VAR you can use any of the following notations: UNIX: $ENV_VAR or ${ENV_VAR} Windows: %ENV_VAR% Makefile: $(ENV_VAR) TCL: $::env(ENV_VAR) or $env(ENV_VAR) Environment variables, either from the parent shell or explicitly defined, can be used to specify: top files directives that take a path as an argument, for example +incdir+ value for defines When an environment variable is not defined, but it is used, the behavior is as follows: for the value of a define directive, the define value is left as-is for top files and directives that take a path as an argument, an error is signaled and such top files and directives are ignored when used inside the value of an environment variable, it is expanded to the empty string Environment variables are visible to the DVT parsers, for example when used in the e language import statements. Environment variables are propagated to the external tools launched from DVT, for example by using Run Configurations or External Builders. When an environment variable is used inside a build file, only the +dvt_setenv+ directives above the usage line are taken into account. Implementation note The Dot â.â segment in a path denotes the current directory, which is solved when the path is used, for example to specify a top file or incdir. It is not solved when defining an environment variable. See the example below: -------- In default.build -------- +dvt_setenv+MYVAR=. // $MYVAR has the value '.' until used to specify a path $MYVAR/top1.e // Equivalent with $DVT_PROJECT_LOC/top1.e -F other/file.f -------- In other/file.f -------- // $MYVAR is used here to specify a path, '.' shall be solved to…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "b90b8bf7-6ee3-48ec-87ac-99308b10bf72",
    "title": "Move Selection to New File | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/refactoring/move-selection-to-new-file.html",
    "section": "Move Selection to New File",
    "content": "Move Selection to New File You can easily move a code fragment to a separate new file. Select a block of code and press Ctrl + 1 , select Move selection to new fileâ¦ from the list of quick assist proposals and press Enter . Fill in the name of the new file. Note The initial selection is replaced by an `include to the new file Tip You can also Right - Click in the editor and go to Refactor > Move Selection to New File . Extract to Module Join Extern and Implementation",
    "section_path": [],
    "tokens": 94,
    "source": "scraped"
  },
  {
    "id": "b31d74b6-c6ab-436a-9043-cdd6d0fca61a",
    "title": "Show Instances in the Search View | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/show-instances/show-instances-in-the-search-view.html",
    "section": "Show Instances in the Search View",
    "content": "Show Instances in the Search View To see all instances of a module, interface or program, hover on the name with the mouse cursor while holding down the Ctrl key and select Show Instances . You can also place the editor cursor on itâs name then right click and select Show â£ Instances . The results are presented in the Search View . Tip You can also trigger this functionality from a viewâs context menu , for example from the Types View . Note If a top is specified using -top directive in a build configuration file, it is displayed in the Show Instances action label. After elaboration an instance can be resolved to a design element different from the one specified in its declaration. Note This functionality works in mixed-language designs, for example when you have a VHDL entity instantiated in a Verilog module or a Verilog module instantiated in a VHDL component. Show Instances Show Instances in the Design Hierarchy View",
    "section_path": [],
    "tokens": 163,
    "source": "scraped"
  },
  {
    "id": "32aca454-b36d-45b4-b568-114d48bb065c",
    "title": "Hierarchical Search | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-search-in-views/hierarchical-search.html",
    "section": "Hierarchical Search",
    "content": "Hierarchical Search You can use single slash (â/â) characters to search for strict (direct) hierarchies and double slash (â//â) to search for non-strict (indirect) hierarchies. You can choose to see all or just the direct descendants of the matched elements. For each hierarchical segment you can use either CamelCase or Simple Regex . No filter. Filter: first/second Search for strict hierarchy. All elements that contain the search pattern and are in a direct hierarchical relationship (father/son) are shown. Filter: second/s_f/fi* Search for strict hierarchy + CamelCase and simple Regex Filter: second//fsc Search for non-strict hierarchy. All elements that contain the search pattern and are in a direct or indirect hierarchical relationship (ancestor/../../descendant) are shown. Filter: s_p/ Search for strict hierarchy and show direct descendants. Same results as for search strict hierarchy, but including the sons of the matched elements. Filter: s_p// Search for strict hierarchy and show all descendants. Same results as for search strict hierarchy, but including all descendants of the matched elements. Simple Regex Search for Members",
    "section_path": [],
    "tokens": 169,
    "source": "scraped"
  },
  {
    "id": "38771acc-d3b5-4a8f-bb6b-76e76009b6f8",
    "title": "Use Cases | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/settings-management/use-cases.html#workspace-preferences",
    "section": "Use Cases",
    "content": "Use Cases Using the same settings across all workspace and projects can be achieved by configuring the corresponding file and adding it in the user location (where $DVT_USER_SETTINGS points to). To share the settings with other users you must put the setting files in a common location and set $DVT_COMMON_SETTINGS to that location. A recommended work-flow for sharing any type of settings with other users is: Start DVT in a clean workspace Customize preferences Define run configurations, compile waivers, etc. on a reference project and move the corresponding files in the user location (available under DVT-Settings/user ) Close DVT and move the files from the user location to a common location where all users can point the $DVT_COMMON_SETTINGS system variable Memory Allocation Thresholds Create or modify the eclipse.ini file in the user settings location and add the new memory arguments. For example: -vmargs -Xmx2048m -Xss1m After adding the new memory thresholds every DVT instance will use them. If you want to change the memory only for a single invocation of DVT you can use the dvt.sh arguments (-heap_size corresponding to -Xmx and -stack_size corresponding to Xss) in the command used to invoke DVT. To share this configuration with other users you can put the eclipse.ini file in common location. Users will still be able to change the settings using an eclipse.ini in the user location. Workspace Preferences Workspace Preferences are automatically saved in the user location preferences.ini file. Reusing them across workspaces is automatically achieved. To share a set of preferences you must copy the preferences.ini file in the common location. Some workspace preferences that are usually shared between users are: Key Bindings - General â£ Keys Code Templates - DVT â£ Code Templates Task Tags - DVT â£ Task Tags Formatting - DVT â£ e Language / SystemVerilog /…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "e6bc18e0-ab05-4713-94d4-2497457af582",
    "title": "Views | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/views.html#layers-view",
    "section": "Views",
    "content": "Views Call Hierarchy View The Call Hierarchy view presents the call tree of a function or task . Place the editor cursor on the desired element, right-click , and choose Show â£ Call Hierarchy , or press Ctrl + Alt + H . Using the buttons in the toolbar(see below), you can select the Call Hierarchy Strategy based on your needs. The Callee Hierarchy Strategy shows method calls in the selected function or task. You can expand nodes in the tree to further inspect the hierarchy. Note Conditional ( if / case ) and fork blocks are also shown. You can hide them using the Filtersâ¦ toolbar button. Note To show labeled blocks in the view use the Filtersâ¦ toolbar button. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all calls from overrides , using the Filtersâ¦ toolbar button. The Caller Hierarchy Strategy shows method calls of the selected function or task. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all method calls of the parent function implementation , using the Filtersâ¦ toolbar button. Note When using the Caller Hierarchy Strategy , the view compacts all function/task calls from the same scope into a single node, with multiple lines specified in the line column. If you want to see all the function calls from the same scope, you can open the Inspect Panel and select the node in the Call Hierarchy View. Note The same input appears in…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "75d39312-5566-4014-be27-d32008d1aca5",
    "title": "Encrypted VIP Support | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/application-notes/encrypted_vip.html",
    "section": "Encrypted VIP Support",
    "content": "Encrypted VIP Support The DVT compiler safely skips encrypted regions of code. Ideally VIP source code should be compiled without errors by any third party tools. However, some VIPs may not be properly encrypted, and lead to false errors. Most of the time this happens due to: Asymmetric encryption - for example when endmodule or endif is inside the encrypted code while the corresponding module or ifdef is outside the encrypted region. In this situation DVT may signal errors for mismatched language tokens, for example âUnexpected token âendmoduleââ. Furthermore some of the types may end up being compiled in the wrong scope altogether. Public encrypted API - for example when the definition of a macro, class, or function is encrypted while still being referenced outside the encrypted region. Note How come a simulator works fine in such cases? Because as simulator decrypts the code if you have the proper licenses. To restore full or partial functionality you can employ one or more of the following solutions: Kindly ask the VIP provider to fix the encryption issues . The SystemVerilog language provides dedicated constructs for this type of encapsulation, such as forward typedefs and extern methods placed in non-encrypted header files. Instruct DVT to automatically close scopes in encrypted files . The automatic closing of scopes will take place in all files that contain encrypted code and whose full path matches the provided pattern. + dvt_encrypted_code_auto_close +/ path / pattern /* + dvt_encrypted_code_auto_close + not +/ path / pattern / to / exclude /* Instruct DVT to automatically define non-existing API . These functions and fields that are accessed within the specified files will be automatically defined with the appropriate signature. The definition will be placed in the closest scope which is defined in a file containing encrypted code. + dvt_encrypted_code_auto_api…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "03e25261-ad29-4833-856f-635720193e1a",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#22.1.9",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "d175b3f3-02dd-4a8e-a4c4-642a21278807",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#17.1.5",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "b1b89240-50d8-4663-9f7b-9bd675b1acb1",
    "title": "Icons and Decorations | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/icons-and-decorations.html#changing-icon-colors",
    "section": "Icons and Decorations",
    "content": "Icons and Decorations Icons Regular Verilog/SystemVerilog File Linked Resource Verilog/SystemVerilog File See Linked Resources . Out of Project Verilog/SystemVerilog File The file is not inside a project directory, nor accessible as a linked resource. Functionality is limited on âgrayâ files. Library Package Program Typedef Class Interface Module Checker Primitive Generate Field Enumeration name Constructor Function Task Event Fork/join - Indicates a fork block. Process - Indicates a process in a fork block. Constraint Cover Group Input Port Output Port Bidirectional Port Interface Port ModPort Port passed multiple times when tracing a signal Wire Port connection Always Assign Module Instance Unknown Instance Interface Instance Object Instance - Relevant for XVM methodologies, indicates a âcreatedâ object. Component Instance - Relevant for XVM methodologies, indicates a âcreatedâ component. Test Class - Relevant for XVM methodologies, indicates a âtestâ class. Sequence - Relevant for XVM methodologies, indicates a âsequenceâ class. Sequence Item - Relevant for XVM methodologies, indicates a âsequence itemâ class. Root Class - Relevant for XVM methodologies, indicates the ârootâ class. Preprocessing define Preprocessing undefine Preprocessing ifdef, ifndef Code Template For example in autocomplete proposals. Decorations Compiled Files To enable/disable go to Window > Preferences > General > Appearance > Label Decorations preference page and check/uncheck DVT Compiled File . Compiled File Skipped File See also: Build Configurations . Access Modifiers To enable/disable go to Window > Preferences > General > Appearance > Label Decorations preference page and check/uncheck Verilog Language Access Modifier . Local Protected Public Errors and Warnings To enable/disable go to Window > Preferences > General > Appearance > Label Decorations preference page and check/uncheck Verilog Language Problem . Error Warning Trace Connections Signal source Signal destination Signal source and destination Changing Icon Colors To change the color of the icons in DVT, navigate to Window > Preferences and…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "059482c7-5550-49ca-a728-17f42d522bdb",
    "title": "Eclipse does not start, there is no Workspace, metadata or log file created | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/eclipse-does-not-start-there-is-no-workspace-metadata-or-log-file-created.html",
    "section": "Eclipse does not start, there is no Workspace, metadata or log file created",
    "content": "Eclipse does not start, there is no Workspace, metadata or log file created A possible cause for this could be the lack of access rights to all, part or one of the files under $DVT_HOME . Solution : check the log in the ~/userâshome/.eclipse/org.eclipse.platform_/configuration/.log and see what is the file that can not be accessed make sure that you have rx rights on all files & folders under $DVT_HOME How do I change Internet Proxy Settings? Workspace permissions",
    "section_path": [],
    "tokens": 78,
    "source": "scraped"
  },
  {
    "id": "06516b2e-6dad-4bfd-9c04-c953b756bed7",
    "title": "Commands | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/command-line-interface/commands.html#close-a-file",
    "section": "Commands",
    "content": "Commands Create a Project (Mixed-Language Capable) createProject <project_path> [-workingset [-newwindow]] [-force] [-close_others] [-f|-F <file_path>] [-top <top_file_path>] [-test <test_file_path>] [-map <link_name> <target_path>] [-name <project_name>] [-lang <lang>] [-perspective <perspective>] [-clearcase] [-git <repo1:repo2:...:repoN>] [-p4 <connection_parameters>] [-openResourceFilterDialog] [-include auto[:<threshold>]] [-include first_level] [-disable_fs_check] [-exclude|include :ref:`name`][,root=folder1[:sub/folderN]][,applies=f|d|rf|rd]] [-build <name>] [-<name>.build <build configuration directives ...>] Mandatory arguments: <project_path> Absolute path to project (must exist). -lang Enable support for <lang> language: E, VLOG, VHDL, CPP, CPP_EXT, PSS, SLN, SDL. CPP, CPP_EXT are only valid when DVT CDT Integration feature is installed. At least one language must be specified. Optional arguments: -<name>.build Create the build configuration file <project>/.dvt/<name>.build with <build configuration directives> as content. All flags up to the end of the command line, or up to the next -<name>.build flag are considered build configuration directives. This flag cannot be used in conjunction with -f, -F, -test, or -top. -build <name> Set <name> as active build configuration. -clearcase Share project with ClearCase Eclipse plugin. -include auto[:<threshold>] Automatically create resource filters, based on the active build configuration. Only compilation related directories are included, for example +incdirs, -y libdirs, $ SPECMAN_PATH entries and parent directories of top files. If specified, directories with more than <threshold> files will be excluded; otherwise, all relevant directories containing compiled files will be included. Some configuration resources are always included: .buildpath, .classpath, .cproject, .dvt, .project, .pydevproject, .settings [NOTE] The -include auto argument can be combined with any further user-specified include or exclude filters -include first_level Automatically create resource filters to include only the files and directories (without their content) located directly under the project root. The directories' content can be brought on demand, level by level, by double clicking on a directory in the Project Explorer View. Some configuration resources are always included: .dvt, .settings For more details see the Lazy Bring-up Resources chapter. -disable_fs_check By default,…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ca0aa15b-1dd7-4b27-aa13-a05d260ce747",
    "title": "Multiple .build Files | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/build-config/multiple-build-files.html",
    "section": "Multiple .build Files",
    "content": "Multiple .build Files You can have multiple build files inside the .dvt directory, and tell DVT which one to use for compilation by using the Set current build button from the toolbar: The current build name is saved in the .dvt/build.config.xml file. The project state is saved per build file after each build, and this allows you to easily switch between multiple views of the project (see Build Persistence for more information). Use cases Depending on your current focus (browsing the design, writing testbench code, debugging) you only want to load in DVT the relevant code rtl.build contains all directives needed to compile the design testbench.build contains all the directives needed to compile the verification environment default.build includes both the rtl.build and testbench.build Quickly switch between synthesizable and non-synthesizable version of the design hierarchy default.build contains all directives needed to compile all the code synth.build contains +dvt_preprocess_translate_pragmas+synthesis and a -f directive to include default.build You switch often between several versions of the same code base. The paths to the few different files are controlled by the $VERSION environment variable. compile.f contains directives needed to compile all the code version1.build contains +dvt_setenv+VERSION=1 and a -f directive to include compile.f version2.build contains +dvt_setenv+VERSION=2 and a -f directive to include compile.f â¦ You want to change the active build before launching DVT, as designers compile just the RTL by rtl.build, while others all.build. Change the build name in .dvt/build.config.xml before launching DVT, for example by a wrapper script run_dvt.sh -rtl . Emulating compiler invocations Compatibility Modes",
    "section_path": [],
    "tokens": 253,
    "source": "scraped"
  },
  {
    "id": "99679fd6-b599-4172-b637-8f12d7ca68e6",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.26",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "5f7e3bfb-3e44-4476-a65d-815175cc3e76",
    "title": "Override Constraints | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/override-constraints/index.html",
    "section": "Override Constraints",
    "content": "Override Constraints Override Annotation Inspect Overrides in the Quick Type Hierarchy View Inspect Overrides in the Layers View Override Using the Dialog Override Using Autocomplete Proposals Override Using the Type Hierarchy View Override Annotation",
    "section_path": [],
    "tokens": 34,
    "source": "scraped"
  },
  {
    "id": "407ae7b6-0982-49e1-a8a1-4faab7915fe9",
    "title": "Locking is not possible in the directoryâ¦ | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/locking-is-not-possible-in-the-directory.html",
    "section": "Locking is not possible in the directoryâ¦",
    "content": "Locking is not possible in the directoryâ¦ Problem : Iâm unable to start DVT from a shared location, at launch time Iâm receiving an error Locking is not possible in the directoryâ¦ Solution : If you are using DVT in a shared installation setup, make sure that the installation directory is read-only for users. Workspace in use, cannot launch eclipseâ¦ How to start DVT Eclipse with a different eclipse.ini",
    "section_path": [],
    "tokens": 69,
    "source": "scraped"
  },
  {
    "id": "adb0ab23-61f4-4ef5-9bc1-61867a671f7b",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.12",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "685a2f09-5aba-4f03-83cf-4df19e1dd679",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.24",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "f9c14f31-e03d-4be0-a83b-fa4ff59e02f3",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.2.10",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ad3b8a34-223c-4722-ad0d-bfb8240853b3",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.2",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "9dc7d16f-7524-4179-bcae-d5c3a6ae2eef",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#17.1.18",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "3109890c-3054-402e-a16b-17eb321bff3c",
    "title": "Key Terms | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/ai-assistant/key-terms.html#symbols",
    "section": "Key Terms",
    "content": "Key Terms Sessions An AI Assistant session represents a task with a clear target. The goal of a session should be focused on a specific work item. Sessions targeting the editor typically have a single request and the reply goes directly to the editor, replacing existing code or inserting new code. Sessions targeting the chat allow you to exchange multiple messages with the LLM. A chat session has one or more message pairs (user request and LLM reply ). Each LLM reply comes as a continuation of the previous messages. Changing a request or regenerating a reply generates a new version of the session. These versions can be navigated using the arrows above the message where the session branched into different versions. Blueprints Besides starting an empty chat session, you can start an editor or chat session from a blueprint. Blueprints contain at least a request, representing a specific task, that the LLM will reply to. Itâs also possible to have a list of requests and replies that bring the session to a specific state. When the last blueprint message is a user message, sessions started from blueprints will automatically pull a reply from the LLM. Blueprints also specify the target of the LLM reply. It can be a new chat or the editor. AI Assistant has a set of built-in blueprints for common tasks. You can also define custom blueprints for later use or to share them with the team (see Custom Blueprints ) Prompting Requests are written in a chat prompt or stored in a blueprint. Symbols and Snippets facilitate request writing, especially when you want to provide more context to the LLM. Before a request is sent, the symbols and snippets are expanded. When using the chat, the expanded request can be inspected before or after they…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "de74c166-4176-4c9c-bd56-41b18d985f37",
    "title": "Basic Tutorial | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/getting-started/basic-tutorial.html#quickly-open-a-file",
    "section": "Basic Tutorial",
    "content": "Basic Tutorial This tutorial provides a step by step walk-through of the SystemVerilog development environment. Switch to the DVT Perspective The DVT Perspective provides a workbench layout with many useful views and shortcuts at hand for developing SystemVerilog code, for example the type browser, class hierarchy browser etc. From menu Window â£ Open Perspective â£ Otherâ¦ choose DVT You can customize and save a perspective. In order to further speed-up the development, at any time you can switch between various perspectives with different tool (views) layouts. For example you can use one perspective for writing code (the editor will take most of the real estate) and another perspective for code navigation (type browser will be a significant component). The default DVT perspective looks like this: Open a Project A project corresponds to a specific directory on the disk. The project is presented in the Navigator View - a file browser component that helps you browse the project directory contents. See also What is a Project Create a New Project Invoke the New Project Wizard: choose menu File â£ New â£ DVT Project . Specify the Project Directory It can be a directory that already contains sources or a new directory that will be created. Specify the Project Name By default, the projectâs name is the last segment of the projectâs directory path (e.g. /tmp/path1/path2/p_name > p_name ). You can change this name by selecting Custom . Note If Project Directory points to an existing project, you cannot change its name. Open a Predefined Project You may open one of the predefined projects that DVT ships with and continue to explore the DVT features. For more details see Predefined Projects . Specify the Project Nature . If the project does not exist or it does not contain any nature, you must…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "4097b1f7-5703-4992-9f99-a89afdcd4c10",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.2.18",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "1411776e-3605-4011-9fa3-e3684be7e265",
    "title": "UVM Compliance Review | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/uvm-support/uvm-compliance-review.html",
    "section": "UVM Compliance Review",
    "content": "UVM Compliance Review To perform the UVM Compliance review of your project, see: Running Verissimo from the DVT Eclipse IDE (requires a Verissimo license). UVM Browser UVM Content Filters",
    "section_path": [],
    "tokens": 29,
    "source": "scraped"
  },
  {
    "id": "643c2944-220f-400f-a53d-ce7fdf42d351",
    "title": "Design Diagrams | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/diagrams/design-diagrams.html#diagram-filters",
    "section": "Design Diagrams",
    "content": "Design Diagrams Design Diagrams help you inspect and document the structure of a design element. You can create a design diagram in one of the following ways: Right + Click in the Types View or the Design Hierarchy View and select Show Diagram . Place the cursor over a type, instance or state variable in the editor, Right - Click and select Show > Diagram . Schematic Diagrams By default Show Diagram opens a schematic diagram that presents the internal structure: ports, sub-instances, combinational and sequential logic and connections. You can draw a nested schematic by increasing the depth from the diagram preferences. Flow Diagrams A flow diagram presents a high level view of internal connectivity. Multiple connections from one instance to another are collapsed in a single directional edge. Transform a schematic into a flow diagram using the preferences from the Diagram Toolbar . Block Diagrams A block diagram presents the ports. Transform a schematic into a block diagram using the preferences from the Diagram Toolbar . Finite-State Machine Diagrams Show Diagram on a state variable inside a module or entity will generate a Finite-State Machine (FSM) diagram. States and transitions are automatically detected in the enclosing scope by analyzing all the assignments and conditions in which the state variable is used. Multiple transitions between the same two states are merged into a single one with multiple conditions. Next state variables are supported. The âone-hotâ case item pattern is supported. Method call transitions are not supported. The initial state is colored gray. Selecting any state or transition will highlight the previous and next states differently. You can change the look and feel of the diagram using the preferences from the Diagram Toolbar or you can change the default preferences from Windows â£ Preferences â£ DVT â£ Diagrams â£ FSM…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "277cca4a-e91b-4be8-9292-113289e1e8c4",
    "title": "e Language SPECMAN_PATH | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/build-config/e-language-specman_path.html#adding-vips-to-specman-path-using-sn-which-sh",
    "section": "e Language SPECMAN_PATH",
    "content": "e Language SPECMAN_PATH The SPECMAN_PATH environment variable is used by the e Language parser to find imported files. It comprises of a list of search directories, separated by the OS-specific path separator character (â:â colon on Linux and â;â semicolon on Windows). It can be defined or altered by using the +dvt_setenv+ directive. When relative paths are provided, they are automatically transformed into paths relative to the compilation root directory. By default the compilation root is the project directory. For more details see Paths . Examples: Action Linux Windows Define/overwrite shell-inherited value +dvt_setenv+SPECMAN_PATH=/my/specman/path1:/my/specman/path1 +dvt_setenv+SPECMAN_PATH=/my/specman/path1;/my/specman/path1 Append to shell-inherited value +dvt_setenv+SPECMAN_PATH=$SPECMAN_PATH:/my/specman/path +dvt_setenv+SPECMAN_PATH=$SPECMAN_PATH;/my/specman/path Prepend to shell-inherited value +dvt_setenv+SPECMAN_PATH=/my/specman/path:$SPECMAN_PATH +dvt_setenv+SPECMAN_PATH=/my/specman/path;$SPECMAN_PATH Append <project_root>/e directory to the SPECMAN_PATH +dvt_setenv+SPECMAN_PATH=$SPECMAN_PATH:e +dvt_setenv+SPECMAN_PATH=$SPECMAN_PATH;e Backward-compatibility note: starting with DVT version 3.2, if a .build file is used to configure the project, the .edt_specman_path file is ignored. Adding VIPs to $SPECMAN_PATH using sn_which.sh You can specify a list of VIPs that should automatically be located by DVT using sn_which.sh and added to the $SPECMAN_PATH (if available in the console where DVT was started). The Specman version defines (e.g define SPECMAN_VERSION_###) are also detected using the same mechanism. By default, the following VIPs are located and added automatically: evc_util, vr_ad, ovm_e, uvm_e e Language Test Files SystemVerilog OVM or UVM Library Compilation",
    "section_path": [],
    "tokens": 210,
    "source": "scraped"
  },
  {
    "id": "cd9b16d6-3c4f-407f-9f7f-44c27980989b",
    "title": "External Documentation | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/external-tools-integration/external-documentation.html",
    "section": "External Documentation",
    "content": "External Documentation You can browse and search through 3rd party documentation using the Eclipse help system. Configure External Documentation Note Integration with external documentation is not available by default in DVT distributions. You have to install the feature by following this procedure: https://eda.amiq.com/download . At step #4 make sure you have checked the Help Plugins . Warning DVT doesnât ship with 3rd party documentation, if it is not in the public domain (for example doxygen docs are public). Assuming you have the documentation installed, configure the path to it from menu Window â£ Preferences â£ Help : Browse External Documentation Once configured it will appear in the help system (menu Help â£ Help Contents ): Search External Documentation You can search through the documentation directly from within Eclipse IDE. For example select and click Ctrl+Shift+H . The Help View is brought up with the matches. You can also bring up the Help View from menu Window â£ Show View â£ Otherâ¦ â£ Help . External Builders Debugger Integration",
    "section_path": [],
    "tokens": 168,
    "source": "scraped"
  },
  {
    "id": "d6407f2f-eefe-4293-becb-a4d769a56f34",
    "title": "External Builders | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/external-tools-integration/external-builders.html#source-code-markers-errors-warnings",
    "section": "External Builders",
    "content": "External Builders An external builder allows you to invoke any script/tool and back-annotate its output (errors, warnings etc.) to the source code. It is a mean that allows you to connect any 3d party tool (compiler, linter etc.) to DVT error signaling engines. You can configure one or more external builders on a project: The commands you define will be invoked on project clean, full build and incremental build. The patterns you define will be applied on the command output to recognize errors, warnings etc. The pattern matches will be back-annotated to the source code and presented in a similar way DVT signals errors (file, line, in the Errors View etc.) DVT ships with some predefined example configurations to get you started. How to define a new external builder Select the project in the Navigator View , right-click and choose Properties . Choose the DVT > External Builders properties. Click the New button to define a new external builder. From the list of external builders choose the generic External Builder or one of the pre-configured ones. Main tab In the Main tab you can: Specify the name of the builder. It will appear in the extracted messages, for example in the Errors View . Specify the Full Build command - invoked on project full build and re-build. It is any regular shell command. You can use various variables (see pre-configured builders for examples). Specify the Auto Build command - invoked on incremental builds, for example on save. It is any regular shell command. You can use various variables (see pre-configured builders for examples). Specify the Clean command - invoked on project clean and before re-build. It is any regular shell command. You can use various variables (see pre-configured builders for examples). Specify the working directory where the commands are invoked…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "d74fa2c9-23d4-4ae6-be0f-6c4d1ff12ae6",
    "title": "FPGA Support | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/application-notes/fpga-support.html#xilinx-ise-vivado",
    "section": "FPGA Support",
    "content": "FPGA Support Intel(Altera) Quartus Use the New DVT Project Wizard (menu File â£ New â£ DVT Project` ) to create a DVT project in the same location as an existing Quartus project. All source files and settings defined in the Quartus project configuration files will be automatically recognized. If you want to create a DVT project in a different location from your Quartus project location you must tune the .dvt/default.build file: + dvt_init_auto # Note that the compilation root must be specified after the +dvt_init_auto directive + dvt_compilation_root +/ quartus / project / location Note Quartus projects are automatically recognized by the DVT build auto-configuration engine. For more details, see Auto-config . When the auto-configuration algorithm detects a Quartus project layout, it scans the existing Quartus project configuration files and automatically generates an equivalent DVT build configuration file (for example default.build.auto.1). If there is no Quartus project layout, this functionality can be triggered using the +dvt_autoconfig_force_quartus directive. It allows the auto-configuration algorithm to scan *.qip files specified in default.build using +dvt_autoconfig_quartus_qip+<qip_file_path> directive (see example below): + dvt_init_auto + dvt_autoconfig_force_quartus + dvt_autoconfig_quartus_qip + file1 . qip + dvt_autoconfig_quartus_qip + file2 . qip + dvt_autoconfig_quartus_qip + file3 . qip Note The New DVT Project Wizard automatically adds both Verilog and VHDL natures. You can manually adjust this setting. Intel(Altera) Quartus Auto-config Specific Directives Directive Description +dvt_autoconfig_quartus_project_revision+<revision_name> Use <revision_name>. +dvt_autoconfig_quartus_script_location+<script_file_path> For debugging purposes. Use <script_file_path> to analyze Quartus project configuration files. +dvt_autoconfig_disable_quartus Ignore Quartus project configuration files and fallback to default auto-config. +dvt_autoconfig_quartus_qip+<qip_file_path> Analyze the specified Quartus project configuration file in addition to any automatically detected ones. May be specified multiple times. +dvt_autoconfig_force_quartus Force quartus auto-config using the *.qip files specified within the +dvt_init_auto section. +dvt_autoconfig_quartus_qip_search_path+<qip_dir_path> Specify root paths in which a deep search will be performed for *.qip files corresponding to *.ip…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "91a6800e-1984-42f0-88c4-484d1e06fdfa",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#22.1.27",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "4783368b-177a-4f53-8638-72c352fad5e8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.26",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "fff2c007-cd04-4160-aa6c-448819169d12",
    "title": "Quick OVM Documentation Access | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/ovm-support/quick-ovm-documentation-access.html",
    "section": "Quick OVM Documentation Access",
    "content": "Quick OVM Documentation Access The Doxygen documentation is available at menu Help > Help Contents > OVM release number Doxygen . You may choose documentation version from menu Window > Preferences > Help > OVM Doxygen . The CDN OVM/UVM User Guide is available at menu Help > Help Contents > CDN OVM/UVM User Guide . You need to configure the path to installed documentation from menu Window > Preferences > Help > CDN OVM/UVM User Guide. You can use Ctrl+Shift+H to quickly search through documentation (with or without selection in the editor). OVM Smart Log OVM Templates",
    "section_path": [],
    "tokens": 98,
    "source": "scraped"
  },
  {
    "id": "77354197-2c61-435b-9a05-461fa3e7363e",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.2.6",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "bbd65a19-1260-453a-94c9-e4970367d197",
    "title": "Refactoring Scripts | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/refactoring/refactoring-scripts.html#writing-a-refactoring-script",
    "section": "Refactoring Scripts",
    "content": "Refactoring Scripts In some situations - like porting code from a library to another, or when dealing with cross-project API refactoring - one has to perform several refactoring operations for many projects. DVT can help you automate such operations by providing scripted refactoring functionality. Refactoring scripts are XML files that describe a set of changes to be performed for a project (into source code, scripts or file/directory names). For instance, such a script can describe all the changes to be applied to a source base for migration between OVM and UVM libraries. Writing a Refactoring Script Below there is a thoroughly commented example script to illustrate the XML syntax used by the scripting engine. XML header and DTD specification on the first lines. <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE refactor-script PUBLIC \"-//DVT//refactor-script\" \"refactor-script.dtd\" > Start of refactoring script content. The script name is displayed in visual controls. < refactor - script version = \"1\" name = \"My refactoring script\" > You can specify exceptions , i.e. paths that will not be affected by the refactoring. Paths are absolute or relative to the project root. You can specify both files and folders. For a folder, all files in it and in all its subfolders will be skipped. < exception kind = \"path\" path = \"skipme\" /> It is advised to exclude sensitive project configuration files, for example: < exception kind = \"path\" path = \".project\" /> Actual refactoring directives are called items . There are several kinds of items, differentiated by the action they perform. When writing a script, one must be careful not to have item collisions: situations when the same piece of text is modified by more than one item. Here are examples that illustrate all the actions currently available in DVT. replace-in-text : perform plain textual search & replace for…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "dd783346-91f6-4724-8024-3072fab152a9",
    "title": "UVM Field Editor | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/uvm-support/uvm-field-editor.html#interface",
    "section": "UVM Field Editor",
    "content": "UVM Field Editor The UVM Field Editor enables you to inspect and edit UVM field registrations. It allows you to quickly add, remove and edit the registration macros and presents field statistics (total no. of fields, no. of registered fields, no. of warnings/errors). Triggering Triggering the UVM Field Editor for a certain class: place the cursor anywhere inside the class definition, right click and select Source â£ UVM Field Editor from the pop-up menu. If you place the cursor on a field, the UVM Field Editor will show up with the respective field selected. If there are no previously registered macros, the uvm_*_utils_begin and uvm_*_utils_end macros shall be determined based on the class found at the cursor position. For a class that inherits from uvm_sequence , a pop-up dialog will ask you to select the desired sequencer from the available ones. Interface On the left side of the Field Editor Dialog there is a list containing all the fields in the class. You can register/unregister the class by clicking on the checkbox in the Class group. When the class is registered you can register or unregister fields by checking the corresponding checkboxes. When selecting a field you can also find information about the macro used for registration in the UVM Registration Macro group. If itâs not the desired macro you can fix it using the Fix button. On the right side you can see the flag status of the registered fields. Its main features are highlighted and explained below: Summary information regarding registrations: no. of registered fields, total no. of fields in class, no. of errors, no. of warnings. Content Filters matched indication Class checkbox that allows you to toggle the registration state. Field type Field name Field icon. The field icons have the following meanings: Icon Meaning The class…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "993449cb-ceed-4ed5-8ef9-4ea1662342b8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.15",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "c2eac646-421e-41d4-b202-ffd8a7f37ce6",
    "title": "Split into Extern and Implementation | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/refactoring/split-into-extern-and-implementation.html",
    "section": "Split into Extern and Implementation",
    "content": "Split into Extern and Implementation It is convenient to move method implementations outside the body of the class declaration. Similarly, this can also be done for constraints. Place the cursor on the method declaration and press Ctrl + 1 , select Split â¦ into extern prototype and implementation from the list of quick assist proposals and press Enter . The declaration is replaced with the âexternâ method prototype, and the implementation is inserted after endclass . Tip You can change the method signature or constraint block by editing the Method Code Templates or Constraint Code Templates . Tip You can also Right - Click in the editor and go to Refactor > Split into extern and implementation . Join Extern and Implementation Change Method Signature",
    "section_path": [],
    "tokens": 125,
    "source": "scraped"
  },
  {
    "id": "3d8c5aad-8fc6-4c29-98dc-c8a7230825d9",
    "title": "Toolbar Actions | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/toolbar-actions.html",
    "section": "Toolbar Actions",
    "content": "Toolbar Actions Icon Description Rebuild Project - See Build Configurations . Lint - Run Verissimo or XVM Compliance Checking. Diagrams - See Diagrams . Content Filters - See Content Filters . Report an Issue! Themes Tooltips",
    "section_path": [],
    "tokens": 36,
    "source": "scraped"
  },
  {
    "id": "8c7d11a6-9688-4f94-90b9-861d97d12280",
    "title": "Diagram Actions | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/diagrams/diagram-actions.html",
    "section": "Diagram Actions",
    "content": "Diagram Actions The following operations are available for all diagrams: Pan Click and drag to pan. Pin A pinned diagram will not be overwritten when generating other diagrams. Pin using the button from the Diagram Toolbar . Save As Save using the button from the Diagram Toolbar in one of the available formats: PNG, SVG, JPEG, or BMP. Select Click to select blocks and edges. Ctrl + Click to select more or de-select. Zoom Zoom using the mouse wheel or the buttons from the Diagram Toolbar . Search Locate a particular diagram element name using the Quick Search bar above the diagram. UVM Components Diagrams Diagram Toolbar",
    "section_path": [],
    "tokens": 107,
    "source": "scraped"
  },
  {
    "id": "426c5005-494e-478e-84c0-5e916ceb0623",
    "title": "How do I Access Files Outside Project Dir - Working with Linked Resources | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/how-do-i-access-files-outside-project-dir---working-with-linked-resources.html",
    "section": "How do I Access Files Outside Project Dir - Working with Linked Resources",
    "content": "How do I Access Files Outside Project Dir - Working with Linked Resources In order to see the contents of some directory on your disk, you must create an Eclipse project in that directory (see also What is a Project ). If your project is spread across multiple directories without a reasonable common root or if you need to access files somehow related to your project that are not located in the project directory , you can open them from menu File â£ Open Fileâ¦ . If the file is outside any project in your workspace, the editor will open and the tab icon will be grayed. For example, if you have a single project xbusonly in your workspace located in /ovm/examples/xbus that includes files from /ovm/src and you open ovm.svh (for example via a hyperlink) the editor tab will look like this: The same will happen if you jump to a definition located in the /ovm/src directory. Important The functionality in âgray iconedâ editors is limited (no hyperlinks etc.). Note This âcapabilityâ serves as an alarm that you are out of your project scope and avoid touching the files. But if you are just navigating in order to understand the world around your project (module), limited functionality itâs not what you want. Solution 1. Create the project in a âroot directoryâ that encloses all directories with relevant files (or emulate) This is a simplistic solution. Besides additional relevant files, it is most likely to get in a lot of unrelated files that might also slow the platform. An alternative might be to create a special ârootâ directory with file system links to each directory whose contents you must access. Then create an Eclipse project in the ârootâ. It requires changes to disk (links) just to work with Eclipse, not…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "7f08c4af-6708-4584-9c01-17ae9e8b724f",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.34",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "6756908a-bbb2-4d79-b5f6-754e61213987",
    "title": "OVM Field Editor | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/ovm-support/ovm-field-editor.html#problems",
    "section": "OVM Field Editor",
    "content": "OVM Field Editor The OVM Field Editor enables you to inspect and edit OVM field registrations. It allows you to quickly add, remove and edit the registration macros and presents field statistics (total no. of fields, no. of registered fields, no. of warnings/errors). Triggering Triggering the OVM Field Editor for a certain class: place the cursor anywhere inside the class definition, right click and select Source > UVM Field Editor from the pop-up menu. If you place the cursor on a field, the OVM Field Editor will show up with the respective field selected. If there are no previously registered macros, the ovm_*_utils_begin and ovm_*_utils_end macros shall be determined based on the class found at the cursor position. For a class that inherits from ovm_sequence, a pop-up dialog will ask you to select the desired sequencer from the available ones. Interface On the left side of the Field Editor Dialog there is a list containing all the fields in the class. You can register/unregister the class by clicking on the checkbox in the Class group. When the class is registered you can register or unregister fields by checking the corresponding checkboxes. When selecting a field you can also find information about the macro used for registration in the OVM Registration Macro group. If itâs not the desired macro you can fix it using the Fix button. On the right side you can see the flag status of the registered fields. Its main features are highlighted and explained below: Summary information regarding registrations: no. of registered fields, total no. of fields in class, no. of errors, no. of warnings. Content Filters matched indication Class checkbox that allows you to toggle the registration state. Field type Field name Field icon. The field icons have the following meanings: Icon Meaning The class is…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "d50393db-20c4-45e2-8091-9155c51821a6",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#24.1.22",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "0e1d4632-81cd-4b2f-9473-0c3b4ff4f038",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.4.13",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "cd5299be-a0ae-43ce-9bdb-71822980097e",
    "title": "Views | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/views.html#console-view",
    "section": "Views",
    "content": "Views Call Hierarchy View The Call Hierarchy view presents the call tree of a function or task . Place the editor cursor on the desired element, right-click , and choose Show â£ Call Hierarchy , or press Ctrl + Alt + H . Using the buttons in the toolbar(see below), you can select the Call Hierarchy Strategy based on your needs. The Callee Hierarchy Strategy shows method calls in the selected function or task. You can expand nodes in the tree to further inspect the hierarchy. Note Conditional ( if / case ) and fork blocks are also shown. You can hide them using the Filtersâ¦ toolbar button. Note To show labeled blocks in the view use the Filtersâ¦ toolbar button. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all calls from overrides , using the Filtersâ¦ toolbar button. The Caller Hierarchy Strategy shows method calls of the selected function or task. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all method calls of the parent function implementation , using the Filtersâ¦ toolbar button. Note When using the Caller Hierarchy Strategy , the view compacts all function/task calls from the same scope into a single node, with multiple lines specified in the line column. If you want to see all the function calls from the same scope, you can open the Inspect Panel and select the node in the Call Hierarchy View. Note The same input appears in…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "e9c1e2eb-1841-4e55-8c66-9e2dd72d8f7c",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#20.1.24",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "f4d2ba59-d941-4a9e-82ce-8e47dcc0423d",
    "title": "Editor Right Click Menu | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/editor-right-click-menu.html#references",
    "section": "Editor Right Click Menu",
    "content": "Editor Right Click Menu Folding Collapse All Levels Fold to statement level. Show Active Preprocessing Show First Level Collapse all levels then expand one level. Expand All Levels Unfold code. Toggle Current Line Fold/unfold. Define Custom Region Create a folding marker for the selected region. Macros See Macro Expansion Source Jump to Pair Bracket Format Source See Code Formatting Toggle Comment Comment/uncomment selection or current line. OVM Field Editor See OVM Field Editor UVM Field Editor See UVM Field Editor Override Methods See Override Functions Emacs Code Factory See Code Factory Show Declaration See use Hyperlinks to Move Around in the Code Call Hierarchy See Call Hierarchy View Design Hierarchy See Design Hierarchy View Diagram See Diagrams Layers See Layers View Type Hierarchy See Type Hierarchy View UVM Sequence Tree See UVM Sequence Tree Verification Hierarchy See Verification Hierarchy View Quick Compile Order See Quick Compile Order View Quick Layers See Quick Layers View Quick Macros See Quick Macros View Quick Outline See Quick Outline View Quick Type Hierarchy See Quick Type Hierarchy View Quick Types See Quick Types View Constraints See Show Constraints Usages Readers Writers See Show Usages, Readers or Writers Including File Jumps to the location where the current file is `included. References See Show Usages, Readers or Writers Trace See Trace Connections Refactor Rename See Rename Refactoring Add Port See Add Port to Module from Selected Field or Add New Port to Module Editor Notification Hyperlinks",
    "section_path": [],
    "tokens": 240,
    "source": "scraped"
  },
  {
    "id": "2d97a7df-8d2b-438b-800a-207194bfd8a6",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.9",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "cbc7a155-82bc-4ba8-a3bd-891b89161acf",
    "title": "Compile Waivers | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/compile-waivers.html#compile-waivers-file-syntax-xml",
    "section": "Compile Waivers",
    "content": "Compile Waivers You can use waivers to change the severity (promote/demote) or disable the problems reported by DVT during compilation. Promote Warning -> Error Demote Error -> Warning Disable Hide Restore Restore a waived problem to its default (originally reported) severity Waivers are applied in order. Multiple waivers may be applied to the same problem. Waivers are defined per project, in the .dvt/waivers.xml file. For more flexibility, on top of the project level compilation waivers, DVT allows you to use compilation waiver files specific to a build configuration. To do that, simply add in the build configuration file the +dvt_compile_waivers_file+ directive followed by the path to the desired file. To quickly create a waivers file click on the Edit waivers button in the Problems View . The .dvt/waivers.xml is created with a default content and opened. You can easily create your own waivers from the default generated ones. In the waivers editor you can use autocomplete for tags, attributes and attribute values. To quickly create a new waiver, in the Problems View right click on any problem reported by DVT and waive it. DVT proposes some default values for the waiver file, description, path and message. You can easily change them to fine-tune the waiver. Another easy way to create a new waiver right from the editor is by using Waive Compilation Problems . You can include other waiver files using: < include path = \"/path/to/included_waivers.xml\" /> The path can be absolute or relative to the project root, and can use environment variables. Compile Waivers Examples Use Case Solution I want to hide all problems from a library that I do not control. < waiver name = \"Disable all from library folder.\" severity = \"DISABLED\" > < match path = \"/path/to/library/*\" /> </ waiver > I want to hide some…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "8b4a11e9-c2b5-4473-b79a-464cfa419f77",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.0.6",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "124e8602-d493-4601-a55f-41699f8c8502",
    "title": "Add Parameter to Module | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-fix-proposals/add-parameter-to-module.html",
    "section": "Add Parameter to Module",
    "content": "Add Parameter to Module An error is triggered when assigning a value to a non-existing module parameter. Place the editor cursor on the errorâs line and press Ctrl + 1 , select Add parameter â¦ from the list of quick fix proposals and press Enter . Tip You may change the parameter type. Press Enter when done. Tip If the module is instantiated multiple time across the project, the Refactor Add Parameter Wizard is opened. See Add New Parameter to Module . Quick Fix Proposals Add Port to Module",
    "section_path": [],
    "tokens": 89,
    "source": "scraped"
  },
  {
    "id": "47a509ef-65aa-4439-be95-0d0a58f6bc94",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.51",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "5c2aa0ba-d618-48c3-80de-43e1b1723ae1",
    "title": "Variables | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/debugger-integration/variables.html",
    "section": "Variables",
    "content": "Variables Inspect variables using the Variables View In the Variables View you can see the current scope variables, like for example: arguments of the current function/method/tcm locally declared variables class fields and module signals inherited fields this / me The Variables View is automatically updated when you move up and down the call stack. Variable Value in Tooltip If you hover variables in the editor, you can see the current value in the tooltip. Change Variable Value Click on the variable value to change it. The new value is sent over to the simulator. Threads, Call Stack, Stepping Watch Expressions",
    "section_path": [],
    "tokens": 100,
    "source": "scraped"
  },
  {
    "id": "97b7c480-93dc-4ece-87ff-5cc2eac10b36",
    "title": "What is a Project | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/getting-started/workspace/what-is-a-project.html#automatic-create-or-import",
    "section": "What is a Project",
    "content": "What is a Project In order to see the contents of a specific directory on the disk, you need to define a project using various wizards. Create a New Project Menu File â£ New â£ DVT Project The first time when you create a project, the Eclipse platform creates a .project file in the directory you specified, right before it presents the directory contents. This is the only operation the platform performs. It will not move or copy any files to your workspace from the directory you specified. It will just create the .project file. Some plug-ins might create other information holders in the project directory. For example DVT creates a .dvt directory to store project level configurations specific to DVT. Note There are ways to create projects directly from a revision control system, for example from a CVS repository. As expected, in this case files will be brought into your workspace. Import an Existing Project Menu File â£ Importâ¦ (> General â£ Existing Projects into Workspace) If a project was created for a directory on the disk (a .project file is already there), you cannot create another project in that directory. Instead you import an existing project into your workspace. Automatic Create or Import The DVT plug-in merges the create and import wizards. It automatically detects that a project already exists at the specified location and imports it. Otherwise it guides you through the project creation. See also Build Configurations What is a Workspace Project Natures",
    "section_path": [],
    "tokens": 247,
    "source": "scraped"
  },
  {
    "id": "a5ed9b59-e0a8-4898-9b41-ef1b4723928e",
    "title": "How do I associate a project with both DVT and CDT? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/how-do-i-associate-a-project-with-both-dvt-and-cdt.html",
    "section": "How do I associate a project with both DVT and CDT?",
    "content": "How do I associate a project with both DVT and CDT? To associate a project or remove the association of a project with DVT or CDT, just right - click on the project and choose Change DVT Nature . The dialog allows you to associate or remove the association with SystemVerilog, VHDL, e Language and C/C++. The C/C++ language appears only when CDT and DVT CDT Integration features are installed. Alternatively, C/C++ association can be achieved using File â£ New â£ Other and select C/C++ â£ Convert to a C/C++ project . Subversive vs Subclipse Can I use vi/vim along with DVT?",
    "section_path": [],
    "tokens": 102,
    "source": "scraped"
  },
  {
    "id": "df888208-489f-43d3-a023-150676e3e4cf",
    "title": "VMM Smart Log | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/vmm-support/vmm-smart-log.html",
    "section": "VMM Smart Log",
    "content": "VMM Smart Log DVT ships with predefined filters for VMM that allow you to view colored and hyper-linked logs like the one below. To turn on VMM Smart Log: Use +define+VMM_LOG_FORMAT_FILE_LINE in the simulator invocation or define VMM_LOG_FORMAT_FILE_LINE in the source code. Select the predefined VMM filters as indicated below: See also Smart Log VMM Support Quick VMM Documentation Access",
    "section_path": [],
    "tokens": 60,
    "source": "scraped"
  },
  {
    "id": "19472154-6524-4560-996a-943d647da28e",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#24.2.26",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "30897d3c-9a75-442a-a54f-4a840e01c813",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.18",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "42585c14-0eed-412b-831a-edc0696cdce2",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#17.1.22",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "498b9685-58d7-4d01-923d-31b6f3421b4c",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.4.18",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "cfc344d7-5b87-4d0e-b868-2b1766893fd4",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.9",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "f297da8a-6b8f-43af-b112-606c63b99d8e",
    "title": "Scripts | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/scripts.html#dvt-plugin-installer-sh",
    "section": "Scripts",
    "content": "Scripts dvt.sh DVT Eclipse IDE Launcher dvt.sh [-h[elp]] [-site site] [-bg] [-dvt_log_location <file>] [-workspace <dir> [-import_workspace_settings <dir> | -force_import_workspace_settings <dir>]] [-eclipsespace <dir>] [-heap_size <size>] [-stack_size <size>] [-options <opt>] [-eclipse_args <args> --] -help Show this help. -bg Launch DVT in background. -dvt_log_location <file> Path to the log of stdout/sterr. Default is /tmp/dvt_log_<PID>. -workspace <dir> Path to the eclipse workspace (temporary eclipse directory). -import_workspace_settings <dir> Path to the eclipse workspace from which settings will be imported. -force_import_workspace_settings <dir> Same as -import_workspace_settings, but it will overwrite target workspace settings. -eclipsespace <dir> Path to the Eclipse configuration and user area. Default is /home/user/.eclipse. -heap_size <size> Set the Java heap size (syntax is <N>[g|G|m|M|k|K]). Default is 3072m. -stack_size <size> Set the Java thread stack size (syntax is <N>[g|G|m|M|k|K]). Default is 4m. -options <option list> Comma separated list of options: disable_browser - do not use SWT browser component and skip auto-config disable_swt_auto_config - do not auto-config SWT GTK version and SWT browser engine disable_chromium - do not use bundled Chromium browser engine disable_xulrunner - do not use bundled XULRunner browser engine disable_webkit - do not use OS's WebKit browser engine disable_cairo - do not use Cairo advanced graphics library disable_force_gtk2 - do not force Eclipse to use GTK2 disable_gtk_theme - do not use custom GTK2 themes generated through DVT disable_force_classic_theme - do not force Eclipse to use the classic theme disable_gtk_scroll_overlay - use traditional scrollbars instead of scrollbars overlayed on top of content disable_shutdown_timeout - do not force stop JVM when shutdown exceeds 5 seconds disable_chromium_mtml - do not use Chromium multithreaded message loop disable_chromium_launcher_library - do not use Chromium launcher library disable_chromium_early_init - do not use early init for Chromium browser engine disable_chromium_web_security - do not enforce same-origin policy for Chromium browser engine dump_allocated_swt_resources - dump SWT allocated resources when 'No more handles' error is…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "7f716e64-ccf4-41d5-9ece-a3f149091507",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#25.1.3",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "e4af6a27-c324-43cb-a34e-e3b52ca8bc09",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.37",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "9408fb6b-5a4c-4647-b1af-00be3bf1222f",
    "title": "Icons and Decorations | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/icons-and-decorations.html#decorations",
    "section": "Icons and Decorations",
    "content": "Icons and Decorations Icons Regular Verilog/SystemVerilog File Linked Resource Verilog/SystemVerilog File See Linked Resources . Out of Project Verilog/SystemVerilog File The file is not inside a project directory, nor accessible as a linked resource. Functionality is limited on âgrayâ files. Library Package Program Typedef Class Interface Module Checker Primitive Generate Field Enumeration name Constructor Function Task Event Fork/join - Indicates a fork block. Process - Indicates a process in a fork block. Constraint Cover Group Input Port Output Port Bidirectional Port Interface Port ModPort Port passed multiple times when tracing a signal Wire Port connection Always Assign Module Instance Unknown Instance Interface Instance Object Instance - Relevant for XVM methodologies, indicates a âcreatedâ object. Component Instance - Relevant for XVM methodologies, indicates a âcreatedâ component. Test Class - Relevant for XVM methodologies, indicates a âtestâ class. Sequence - Relevant for XVM methodologies, indicates a âsequenceâ class. Sequence Item - Relevant for XVM methodologies, indicates a âsequence itemâ class. Root Class - Relevant for XVM methodologies, indicates the ârootâ class. Preprocessing define Preprocessing undefine Preprocessing ifdef, ifndef Code Template For example in autocomplete proposals. Decorations Compiled Files To enable/disable go to Window > Preferences > General > Appearance > Label Decorations preference page and check/uncheck DVT Compiled File . Compiled File Skipped File See also: Build Configurations . Access Modifiers To enable/disable go to Window > Preferences > General > Appearance > Label Decorations preference page and check/uncheck Verilog Language Access Modifier . Local Protected Public Errors and Warnings To enable/disable go to Window > Preferences > General > Appearance > Label Decorations preference page and check/uncheck Verilog Language Problem . Error Warning Trace Connections Signal source Signal destination Signal source and destination Changing Icon Colors To change the color of the icons in DVT, navigate to Window > Preferences and…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "3d42101e-7ac0-40c4-a801-885d205de85c",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#17.1.1",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "bf0d75e4-db9a-444b-b1ab-2b79101af55b",
    "title": "Update Module Instance | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-fix-proposals/update-module-instance.html",
    "section": "Update Module Instance",
    "content": "Update Module Instance Problems are reported when a module instance does not match the module definition (has missing or extra port connections). Place the editor cursor on a problemâs line and press Ctrl + 1 , select Update instance to match module definition from the list of quick fix proposals and press Enter . The extra ports are removed and all the missing ports are added at the end of the instance port list. Tip You may change the newly added port connections. Press Tab key to switch between the edit boxes, and Enter when done. Note The quick fix only works for named port connections. Update Extern Prototype/Implementation Update Virtual Method Signature",
    "section_path": [],
    "tokens": 113,
    "source": "scraped"
  },
  {
    "id": "0eb6edd3-18b2-4e04-a3aa-89e151d42de7",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.15",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "d3a77217-12d9-411d-b514-708f21b555e4",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.38",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "43fd735d-860a-4ab4-b5d2-061b624b33b2",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.4.28",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "eed78bb0-7d85-462b-b470-69a8b52e84dc",
    "title": "How do I change the background color of the Editor? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/how-do-i-change-the-background-color-of-the-editor.html",
    "section": "How do I change the background color of the Editor?",
    "content": "How do I change the background color of the Editor? Go to Window â£ Preferences , then navigate to General â£ Editors â£ Text Editors . In the panel on the right, from the Appearance color options list select Background color , then use the color picker to choose the desired color (the System default checkbox must be unchecked). I am using the Common Desktop Environment via Citrix and experiencing crashes. What can I do? Some widget colors are not displayed properly. What can I do?",
    "section_path": [],
    "tokens": 86,
    "source": "scraped"
  },
  {
    "id": "8b4b544a-648e-43b0-98a9-c1a210d0f3b8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.3.5",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "9c29d001-8f7b-44fd-a358-27d9e9c43429",
    "title": "Diagram Toolbar | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/diagrams/diagram-toolbar.html",
    "section": "Diagram Toolbar",
    "content": "Diagram Toolbar Select Types (select starting types for diagram) Select Instances (choose which design element instances are relevant) Filter (hide or highlight specific diagram elements using regex) Preferences (change diagram preferences) Save As (save diagram as image) Refresh Zoom In Zoom Out Fit Canvas Pin (pin diagram window) Inspect Panel (show or hide inspect panel) Transition Table (show or hide transition table) Diagram Actions Diagram Magnifier",
    "section_path": [],
    "tokens": 66,
    "source": "scraped"
  },
  {
    "id": "f8028aa3-b7a3-47bd-80da-1cad3a1e3f33",
    "title": "OVM Compliance Review | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/ovm-support/ovm-compliance-review.html",
    "section": "OVM Compliance Review",
    "content": "OVM Compliance Review To perform the OVM Compliance review of your project, see: Running Verissimo from the DVT Eclipse IDE (requires a Verissimo license). OVM Support OVM Field Editor",
    "section_path": [],
    "tokens": 29,
    "source": "scraped"
  },
  {
    "id": "2462d0da-09a0-4ae5-bb3e-34cd0902c9ef",
    "title": "How to generate code from a project template | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/project-templates/how-to-generate-code-from-a-project-template.html",
    "section": "How to generate code from a project template",
    "content": "How to generate code from a project template To generate code from a project template use DVT Project From Template Wizard from menu File â£ New â£ DVT Project From Template then follow the steps: Specify Template Directory and Target Directory Specify Parameters Step 1. Specify Directories Specify the template directory (You can also choose from Predefined Projects ) and the destination directory where the code will be generated. Step 2. Specify Parameters DVT automatically recognizes the parameters by scanning the template directory recursively. If default values are specified in the Template Configuration file, they are automatically filled in. You can edit values as needed. You may restore to defaults as well. If the template directory was developed using DVT and configured as a project (it includes .project and .dvt files) you may chose to inherit its settings (default.build etc.). What is a project template? Template Configuration",
    "section_path": [],
    "tokens": 147,
    "source": "scraped"
  },
  {
    "id": "4b56884b-fb4a-4db4-bf40-f48dd83af705",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.32",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "be649ff0-32ad-4473-a7fc-ab62d0919da8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.17",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "9d48f4b8-0a86-4337-993c-3e7eac6e5fe8",
    "title": "Override Using Autocomplete Proposals | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/override-constraints/override-constraints-using-autocomplete.html",
    "section": "Override Using Autocomplete Proposals",
    "content": "Override Using Autocomplete Proposals Place your cursor inside a class and then press Ctrl + Space to trigger Content Assist . When doing so, the list of proposals includes constraints that are available to override. The adjacent Proposal Tooltip includes information about the action that will be performed. Upon choosing the constraint, a corresponding constraint stub will be generated at the cursorâs location. The constraints may be filtered by typing additional keywords such as static . Tip You can change the constraint signature by editing the Constraint Code Templates See also Content Assist (Autocomplete) . Override Using the Dialog Generate Getters and Setters",
    "section_path": [],
    "tokens": 103,
    "source": "scraped"
  },
  {
    "id": "7d2e95c1-97cb-4599-b0cd-56fc68831b46",
    "title": "User and Common Settings Location | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/settings-management/user-and-common-settings-location.html",
    "section": "User and Common Settings Location",
    "content": "User and Common Settings Location User level settings Location is set by default in $HOME/.dvt/settings when DVT is started using dvt.sh or dvt_cli.sh scripts on Linux. On Windows and MacOS the user location is not defined and the engine for settings management is disabled. To set or change the location of user level settings the $DVT_USER_SETTINGS variable must be set in the environment before DVT is started. Common level settings Location is not defined by default. To set or change the location for common level settings, the $DVT_COMMON_SETTINGS variable must be set in the environment before DVT is started. If multiple common levels are needed then the variable can contain multiple paths separated using the OSâs path separator. In this case the last directory will have the higher precedence. Unmanaged Settings Use Cases",
    "section_path": [],
    "tokens": 133,
    "source": "scraped"
  },
  {
    "id": "95094fe2-df76-49bc-9152-2c2cb784250e",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.19",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "7a6dac68-2001-498a-91e0-164ae9ae4d09",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.41",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "56f2b56a-d4b5-489d-abc6-ccec858a6f9b",
    "title": "SWT/XML Reference | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/custom-dialogs/swtxml-reference.html",
    "section": "SWT/XML Reference",
    "content": "SWT/XML Reference A custom dialog is described in an XML file with .swtxml extension. The first line must declare the file as XML: <?xml version=\"1.0\" encoding=\"utf-8\"?> The topmost element must be a Composite widget that defines the title of the dialog (specified by its id attribute) and the widgets that can be used (standard SWT widgets and custom DVT widgets): <Composite xmlns= \"http://www.swtxml.com/swt\" xmlns:sv= \"http://eda.amiq.com/xmlns/customdialog/sv\" xmlns:dvt= \"http://eda.amiq.com/xmlns/customdialog\" id= \"Dialog Title\" > </Composite> A widget is a graphical component (e.g. Textbox, Checkbox) or a container of other widgets (e.g. Composite, Group). Each widget has a corresponding XML tag. You can use any widget to create your dialog. If you specify an id attribute for the widget tag, it will also produce an output in the dialog result. Layouts There is a large set of layout options available. A complete reference can be found here . The best approach to finding the desired layout is by using the extensive autocomplete provided by the SWT/XML Editor . Below there is a list common use-cases with examples. Horizonal Fill <Composite id= \" -verbosity \" layout= \"layout:fill;\" > <Label text= \"Verbosity:\" /> <Button id= \" HIGH \" style= \"RADIO\" text= \"High\" /> <Button id= \" MEDIUM \" style= \"RADIO\" text= \"Medium\" /> <Button id= \" LOW \" style= \"RADIO\" text= \"Low\" /> </Composite> Vertical Fill <Composite id= \" -verbosity \" layout= \"layout:fill;type:VERTICAL;\" > <Label text= \"Verbosity:\" /> <Button id= \" HIGH \" style= \"RADIO\" text= \"High\" /> <Button id= \" MEDIUM \" style= \"RADIO\" text= \"Medium\" /> <Button id= \" LOW \" style= \"RADIO\" text= \"Low\" /> </Composite> Grid <Composite id= \" -verbosity \" layout= \"layout:grid;numColumns:3;\" > <Label text= \"Verbosity:\" layoutData= \"horizontalSpan:3;\" /> <Button id= \" HIGH \" style= \"RADIO\" text= \"High\" /> <Button id= \" MEDIUM \" style= \"RADIO\" text= \"Medium\" /> <Button id=…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "39a75fcb-a88c-49d5-ae66-acbec5b6b600",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.47",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "4c9e407d-0760-4fab-b4a7-12d2067fe8ab",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.4",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "30ac2b86-23a2-425c-b962-ada274739555",
    "title": "Set the License | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/installation/license.html",
    "section": "Set the License",
    "content": "Set the License In order to use DVTâs features, you must obtain and set the license. The license must be passed to the application through one of the following environment variables : DVT_LICENSE_FILE DVTLMD_LICENSE_FILE LM_LICENSE_FILE Environment variables will be read in the order above and the first non-empty value will be used, the others will be ignored. Any variable containing only the string âFLEXLMâ (case-insensitive) will be ignored. Important Environment variables must be set before starting the application and the application must inherit the variables (e.g. when setting the variables in a terminal the application must be started from the same terminal). The license environment variable or setting value must contain one or more FlexLM license sources. Supported license sources are : File-system path of a license file: /path/to/dvt.lic License server address as port@host: 27001@licsrv Three-server redundancy triad with comma (,) separated license servers: 27001@licsrv1,27001@licsrv2,30001@licsrv3 File-system path of a directory containing one or more license files with .lic extension: /path/to/lic_dir Multiline string with the content of a license file surrounded by three curly brackets: {{{...}}} Multiple license sources, with the exception of multiline string, can be specified by separating them with: colon (:) on Linux/MacOS semicolon (;) on Windows ampersand (&) on any OS Note If the host part of port@host is an IPv6 address then make sure to always include the ampersand (&) separator before or after even if there are no more license sources. Note If the host part of port@host is resolved by DNS to both IPv6 and IPv4 addresses while the server is only IPv6 accessible then the application must be started with the -Djava.net.preferIPv6Addresses=true vmargs. The license features are checked-out when a DVT project is opened. A license indicator is available in the applicationâs bottom-right corner, selecting it will open the license log. Install DVT…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "8c2e8b87-ff0b-4a8d-ab3b-1fc359a0545e",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.27",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "22233d60-7f8a-4ee8-a558-92ae75c8a5f1",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.42",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "122d122a-823d-4899-a5a6-66f7cae2e7db",
    "title": "I want to use an alias in a DVT Generic Run Configuration, but itâs not recognized | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/i-want-to-use-an-alias-in-a-dvt-generic-run-configuration-but-its-not-recognized.html",
    "section": "I want to use an alias in a DVT Generic Run Configuration, but itâs not recognized",
    "content": "I want to use an alias in a DVT Generic Run Configuration, but itâs not recognized More details here . Rebuild shortcut (Ctrl + Alt + R) does not work How to set multiple paths as sources of predefined projects ?",
    "section_path": [],
    "tokens": 41,
    "source": "scraped"
  },
  {
    "id": "e59774e5-ebd6-4314-a27b-0faff2f1ed75",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#24.1.11",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ad86e5ed-4c49-45b1-8072-a7bfc44644c8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.6",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "b1d8b5b8-ec7e-47be-97fd-448d1796981b",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.30",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "600589a9-7b66-4787-bbad-cc4ce8f5e198",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.1.4",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "f0bda7d0-42f4-403d-b848-299a6454b9d8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.14",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "760ce0de-6a36-4109-bf8a-8772f8f97fa6",
    "title": "Extract to Variable | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-assist-proposals/extract-to-variable.html",
    "section": "Extract to Variable",
    "content": "Extract to Variable An expression inside a function or task can be extracted to a local variable. Select the expression and press Ctrl + 1 , select Extract to local variable from the list of quick assist proposals and press Enter . The variable is declared and initialized with the extracted expression in the correct scope. Note By default, if and loop conditions are evaluated to the logic data type, according to the IEEE 1800-2023 Standard for SystemVerilog. You can enforce the data type to bit by going to Window â£ Preferences â£ DVT â£ SystemVerilog â£ Refactoring and enabling Enforce condition data type to bit . This preference applies only when you select the whole condition. Tip You may change the variable name and type. Press tab to switch between the edit boxes. Tip If the expression occurs multiple times throughout the function, you may chose to replace all the occurrences with the newly created variable, or only the selected one. Tip You can also Right - Click in the editor and go to Refactor > Extractâ¦ . Expand .* Port Connections Extract to Method",
    "section_path": [],
    "tokens": 186,
    "source": "scraped"
  },
  {
    "id": "5ab91393-f9ef-4983-9354-364f93200f2a",
    "title": "Declare Method | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-fix-proposals/declare-method.html",
    "section": "Declare Method",
    "content": "Declare Method An error is triggered when calling a method which does not exist. Place the editor cursor on the errorâs line and press Ctrl + 1 , select Declare function â¦ or Declare task â¦ from the list of quick fix proposals and press Enter . The method stub declaration is inserted in the appropriate scope. Note The method signature (return type, argument names and types) is automatically detected from context. Note The implementation stub contains a TODO reminder which shows up the Tasks View. See Track Tasks using TODO Markers . Tip You may change the functionâs return type, as well as the name and type of each argument. Press Tab key to switch between the edit boxes, and Enter when done. Tip You can change the method signature by editing the Method Code Templates Declare Extern Prototype Declare Variable",
    "section_path": [],
    "tokens": 142,
    "source": "scraped"
  },
  {
    "id": "bf647ec5-f751-479c-bbfc-f25445ffd841",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.26",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "a8230dba-283b-4228-a51e-41121fbb7ecf",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.12",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "af8c724f-0c2a-46c8-aff0-e4021c721f71",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.7",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "d1e783bc-adbc-41f3-9da8-1c0d9b01a367",
    "title": "Bind Method Call Arguments by Position | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/refactoring/bind-method-call-arguments-by-position.html",
    "section": "Bind Method Call Arguments by Position",
    "content": "Bind Method Call Arguments by Position You can easily convert the argument bindings of a method call from named to positional. Place the cursor on a method call and press Ctrl + 1 , select Bind method call arguments by position from the list of quick assist proposals and press Enter . The argument bindings of the method call are converted to positional. Tip You can also Right + Click in the editor and go to Refactor > Bind Method Call Arguments by Position . Bind Method Call Arguments by Name Connect Instance Ports by Name",
    "section_path": [],
    "tokens": 96,
    "source": "scraped"
  },
  {
    "id": "e55c7415-fd00-4446-8cf4-d1e088841de5",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#23.1.16",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "965ec3ad-6191-4467-955e-1b2152203d76",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.11",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "02635147-184a-48dc-af3a-5381df4a73e8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.21",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "f2f3bf53-db99-4b8e-8b67-e62fde1dbb5d",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.16",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ea2b1f52-d01b-4071-aa70-77e6ce78dcb6",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.0.0",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "37571111-bd87-40dd-b90e-3e37c38d5226",
    "title": "Views | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/views.html#registers-view",
    "section": "Views",
    "content": "Views Call Hierarchy View The Call Hierarchy view presents the call tree of a function or task . Place the editor cursor on the desired element, right-click , and choose Show â£ Call Hierarchy , or press Ctrl + Alt + H . Using the buttons in the toolbar(see below), you can select the Call Hierarchy Strategy based on your needs. The Callee Hierarchy Strategy shows method calls in the selected function or task. You can expand nodes in the tree to further inspect the hierarchy. Note Conditional ( if / case ) and fork blocks are also shown. You can hide them using the Filtersâ¦ toolbar button. Note To show labeled blocks in the view use the Filtersâ¦ toolbar button. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all calls from overrides , using the Filtersâ¦ toolbar button. The Caller Hierarchy Strategy shows method calls of the selected function or task. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all method calls of the parent function implementation , using the Filtersâ¦ toolbar button. Note When using the Caller Hierarchy Strategy , the view compacts all function/task calls from the same scope into a single node, with multiple lines specified in the line column. If you want to see all the function calls from the same scope, you can open the Inspect Panel and select the node in the Call Hierarchy View. Note The same input appears in…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "c911e63f-ce76-48f6-b138-664c53159a63",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#22.1.23",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "646e2755-6f4a-4522-b1aa-1dfd7587cbe3",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.30",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "dc4f1b14-581f-4999-843e-9526cd6b7047",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#25.1.7",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "0ed34c9a-d21f-421c-adf4-b7c2443913fa",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.5",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "cec6e847-8a48-4250-b179-e097c55416c9",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.19",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "aa497bc6-8355-48b1-ae7c-310ef9feabb0",
    "title": "Workspace and Workbench | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/getting-started/workspace/workspace-and-workbench.html#work",
    "section": "Workspace and Workbench",
    "content": "Workspace and Workbench Work Workspace and workbench are different terms for different concepts, however they sound quite similar to be mistakenly interchanged. The âworkâ prefix has a tendency to make us lose the interest, so I guess we donât get to hear clearly the âspaceâ or âbenchâ that follow, hence both workspace and workbench collapse under the annoying âsomething about workâ. Workspace One of the first things you specify when you start Eclipse is the workspace location. The workspace is a directory that holds information about the projects you work on, as well as the Eclipse preferences (from layout to behavior). We can say that the workspace âholdsâ the Integrated Development Environment: the data you work on (organized in projects) and how you work with it (preferences). It is your âspace of workâ or âworking spaceâ or âworking universeâ. Depending on your style, you can do all your work in a single workspace, no matter how different projects in your life, for example a Web project to publish your photos, a Verification project and a Java project where you learn how to program. Or you can chose to have several workspaces, each one dedicated to a specific state of mind or universe of thinking. Workbench The workbench is practically the Eclipse main window. It is the bench where you organize your instruments, except that now you donât have power supplies, signal generators or oscilloscopes, but different views and editors . Views and editors are your instruments to manipulate sources and data. You arrange them at hand for a specific task (exploring, debugging, coding etc.). What instruments you use and how you lay them out on your bench ( workbench ) is known as a perspective : with what and from what angles you look at your data. Eclipse allows you…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "e40b95d0-42b5-4fbf-8a6f-344f258dd95b",
    "title": "Views | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/views.html#compile-order-view",
    "section": "Views",
    "content": "Views Call Hierarchy View The Call Hierarchy view presents the call tree of a function or task . Place the editor cursor on the desired element, right-click , and choose Show â£ Call Hierarchy , or press Ctrl + Alt + H . Using the buttons in the toolbar(see below), you can select the Call Hierarchy Strategy based on your needs. The Callee Hierarchy Strategy shows method calls in the selected function or task. You can expand nodes in the tree to further inspect the hierarchy. Note Conditional ( if / case ) and fork blocks are also shown. You can hide them using the Filtersâ¦ toolbar button. Note To show labeled blocks in the view use the Filtersâ¦ toolbar button. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all calls from overrides , using the Filtersâ¦ toolbar button. The Caller Hierarchy Strategy shows method calls of the selected function or task. Note When calling a virtual method on a base class handle, any of the child overrides of that method may be executed, depending on the runtime object type. In addition to the method call, you may choose to see all method calls of the parent function implementation , using the Filtersâ¦ toolbar button. Note When using the Caller Hierarchy Strategy , the view compacts all function/task calls from the same scope into a single node, with multiple lines specified in the line column. If you want to see all the function calls from the same scope, you can open the Inspect Panel and select the node in the Call Hierarchy View. Note The same input appears in…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "c0f17fe2-31a9-4cd4-aa71-5532dc6e654d",
    "title": "Design Diagrams | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/diagrams/design-diagrams.html#block-diagrams",
    "section": "Design Diagrams",
    "content": "Design Diagrams Design Diagrams help you inspect and document the structure of a design element. You can create a design diagram in one of the following ways: Right + Click in the Types View or the Design Hierarchy View and select Show Diagram . Place the cursor over a type, instance or state variable in the editor, Right - Click and select Show > Diagram . Schematic Diagrams By default Show Diagram opens a schematic diagram that presents the internal structure: ports, sub-instances, combinational and sequential logic and connections. You can draw a nested schematic by increasing the depth from the diagram preferences. Flow Diagrams A flow diagram presents a high level view of internal connectivity. Multiple connections from one instance to another are collapsed in a single directional edge. Transform a schematic into a flow diagram using the preferences from the Diagram Toolbar . Block Diagrams A block diagram presents the ports. Transform a schematic into a block diagram using the preferences from the Diagram Toolbar . Finite-State Machine Diagrams Show Diagram on a state variable inside a module or entity will generate a Finite-State Machine (FSM) diagram. States and transitions are automatically detected in the enclosing scope by analyzing all the assignments and conditions in which the state variable is used. Multiple transitions between the same two states are merged into a single one with multiple conditions. Next state variables are supported. The âone-hotâ case item pattern is supported. Method call transitions are not supported. The initial state is colored gray. Selecting any state or transition will highlight the previous and next states differently. You can change the look and feel of the diagram using the preferences from the Diagram Toolbar or you can change the default preferences from Windows â£ Preferences â£ DVT â£ Diagrams â£ FSM…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "43ed43bb-5d40-426d-926b-10d367f524d8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.37",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "aa86a6ed-5aeb-47a2-8504-79a8933b0d27",
    "title": "Add Port to Module | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-fix-proposals/add-port-to-module.html",
    "section": "Add Port to Module",
    "content": "Add Port to Module An error is triggered when connecting a non-existing port in a module instantiation. Place the editor cursor on the errorâs line and press Ctrl + 1 , select Add port â¦ from the list of quick fix proposals and press Enter . Tip If the module is instantiated multiple time across the project, the Refactor Add Port Wizard is opened. See Add New Port to Module . Tip You may change the port direction. Press Enter when done. Add Parameter to Module Add Signal to Sensitivity List",
    "section_path": [],
    "tokens": 91,
    "source": "scraped"
  },
  {
    "id": "0d8c8a7e-f63f-4bdb-8336-a1b0e22e31d0",
    "title": "Smart Log | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/external-tools-integration/smart-log.html#smart-log-filters",
    "section": "Smart Log",
    "content": "Smart Log For any invocation you can either use predefined filter sets for specific tools, or define your own filters and style maps in order to view the simulation output like the one below. See also Smart Log - Filters Smart Log - Hyperlinks Smart Log - Styles Run Configurations Smart Log - Filters To define a new filter for a DVT Generic run configuration go to the Filters Tab, click Newâ¦ and specify filter parameters. The main filter parameters are: Name - The name of the filter Severity - The severity of the filter. Pattern - The filter pattern. Use ${file} to indicate a file hyper-link, and ${line} to indicate the line to jump to. Use (?<TAG_NAME>) to tag a group that will be used to randomly or explicitly assign a style (green bold for example - see Smart Log - Styles ). In the Filters Tab you can also set other parameters such as: The maximum number of characters per line ( 1 ) The maximum number of consecutive lines ( 2 ) Whether links should jump to resources from the current working set ( 5 ) You can browse through predefined filters to see more examples ( 3 ). You can also add a filter pattern for your console title ( 4 ). This should contain capturing groups whose contents will be appended to the console title. For example the pattern in the image above: âDVT_CONSOLE_TITLEs+(w+)â will append to the console title when it will match a text like âDVT_CONSOLE_TITLE my_titleâ in the console output. Smart Log - Hyperlinks Using the predefined filters enables you access to hyperlinks for files and also for some error codes of certain simulators. By clicking on a hyperlinked error code a dialog pops-up with the explanation of that error provided by…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "10d056bd-4a80-42df-941c-066d0a2bfc2c",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#20.1.19",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "a0e3bc92-f109-4c65-ba19-1b0c42bcfae2",
    "title": "Commands | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/command-line-interface/commands.html#query-the-running-status",
    "section": "Commands",
    "content": "Commands Create a Project (Mixed-Language Capable) createProject <project_path> [-workingset [-newwindow]] [-force] [-close_others] [-f|-F <file_path>] [-top <top_file_path>] [-test <test_file_path>] [-map <link_name> <target_path>] [-name <project_name>] [-lang <lang>] [-perspective <perspective>] [-clearcase] [-git <repo1:repo2:...:repoN>] [-p4 <connection_parameters>] [-openResourceFilterDialog] [-include auto[:<threshold>]] [-include first_level] [-disable_fs_check] [-exclude|include :ref:`name`][,root=folder1[:sub/folderN]][,applies=f|d|rf|rd]] [-build <name>] [-<name>.build <build configuration directives ...>] Mandatory arguments: <project_path> Absolute path to project (must exist). -lang Enable support for <lang> language: E, VLOG, VHDL, CPP, CPP_EXT, PSS, SLN, SDL. CPP, CPP_EXT are only valid when DVT CDT Integration feature is installed. At least one language must be specified. Optional arguments: -<name>.build Create the build configuration file <project>/.dvt/<name>.build with <build configuration directives> as content. All flags up to the end of the command line, or up to the next -<name>.build flag are considered build configuration directives. This flag cannot be used in conjunction with -f, -F, -test, or -top. -build <name> Set <name> as active build configuration. -clearcase Share project with ClearCase Eclipse plugin. -include auto[:<threshold>] Automatically create resource filters, based on the active build configuration. Only compilation related directories are included, for example +incdirs, -y libdirs, $ SPECMAN_PATH entries and parent directories of top files. If specified, directories with more than <threshold> files will be excluded; otherwise, all relevant directories containing compiled files will be included. Some configuration resources are always included: .buildpath, .classpath, .cproject, .dvt, .project, .pydevproject, .settings [NOTE] The -include auto argument can be combined with any further user-specified include or exclude filters -include first_level Automatically create resource filters to include only the files and directories (without their content) located directly under the project root. The directories' content can be brought on demand, level by level, by double clicking on a directory in the Project Explorer View. Some configuration resources are always included: .dvt, .settings For more details see the Lazy Bring-up Resources chapter. -disable_fs_check By default,…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "8aacf040-5879-4858-9070-b9e1d44787d0",
    "title": "Update Extern Prototype/Implementation | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-fix-proposals/update-extern-prototypeimplementation.html",
    "section": "Update Extern Prototype/Implementation",
    "content": "Update Extern Prototype/Implementation An error is triggered when the implementation of an extern method doesnât match its prototype. Place the editor cursor on the errorâs line and press Ctrl + 1 , select Update implementation to match extern prototype or Update extern prototype to match implementation from the list of quick fix proposals and press Enter . The method signature (return type, argument names and types) is updated accordingly to match the prototype: Remove Signal Never Used Update Module Instance",
    "section_path": [],
    "tokens": 80,
    "source": "scraped"
  },
  {
    "id": "7518f44a-81a8-44a6-b01a-6997152da62d",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#17.1.31",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "c7d61f21-598c-4a0e-b91b-f8f3a80ff07f",
    "title": "Basic Tutorial | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/getting-started/basic-tutorial.html#see-comments-in-tooltips",
    "section": "Basic Tutorial",
    "content": "Basic Tutorial This tutorial provides a step by step walk-through of the SystemVerilog development environment. Switch to the DVT Perspective The DVT Perspective provides a workbench layout with many useful views and shortcuts at hand for developing SystemVerilog code, for example the type browser, class hierarchy browser etc. From menu Window â£ Open Perspective â£ Otherâ¦ choose DVT You can customize and save a perspective. In order to further speed-up the development, at any time you can switch between various perspectives with different tool (views) layouts. For example you can use one perspective for writing code (the editor will take most of the real estate) and another perspective for code navigation (type browser will be a significant component). The default DVT perspective looks like this: Open a Project A project corresponds to a specific directory on the disk. The project is presented in the Navigator View - a file browser component that helps you browse the project directory contents. See also What is a Project Create a New Project Invoke the New Project Wizard: choose menu File â£ New â£ DVT Project . Specify the Project Directory It can be a directory that already contains sources or a new directory that will be created. Specify the Project Name By default, the projectâs name is the last segment of the projectâs directory path (e.g. /tmp/path1/path2/p_name > p_name ). You can change this name by selecting Custom . Note If Project Directory points to an existing project, you cannot change its name. Open a Predefined Project You may open one of the predefined projects that DVT ships with and continue to explore the DVT features. For more details see Predefined Projects . Specify the Project Nature . If the project does not exist or it does not contain any nature, you must…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "b1dbe3dc-0362-4122-a007-76944ca94bf2",
    "title": "External Builders | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/external-tools-integration/external-builders.html#how-to-define-a-new-external-builder",
    "section": "External Builders",
    "content": "External Builders An external builder allows you to invoke any script/tool and back-annotate its output (errors, warnings etc.) to the source code. It is a mean that allows you to connect any 3d party tool (compiler, linter etc.) to DVT error signaling engines. You can configure one or more external builders on a project: The commands you define will be invoked on project clean, full build and incremental build. The patterns you define will be applied on the command output to recognize errors, warnings etc. The pattern matches will be back-annotated to the source code and presented in a similar way DVT signals errors (file, line, in the Errors View etc.) DVT ships with some predefined example configurations to get you started. How to define a new external builder Select the project in the Navigator View , right-click and choose Properties . Choose the DVT > External Builders properties. Click the New button to define a new external builder. From the list of external builders choose the generic External Builder or one of the pre-configured ones. Main tab In the Main tab you can: Specify the name of the builder. It will appear in the extracted messages, for example in the Errors View . Specify the Full Build command - invoked on project full build and re-build. It is any regular shell command. You can use various variables (see pre-configured builders for examples). Specify the Auto Build command - invoked on incremental builds, for example on save. It is any regular shell command. You can use various variables (see pre-configured builders for examples). Specify the Clean command - invoked on project clean and before re-build. It is any regular shell command. You can use various variables (see pre-configured builders for examples). Specify the working directory where the commands are invoked…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "1c176365-98ae-4886-8563-d3193b7677cb",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.21",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "8eba7fd3-4cd3-4f6a-9dc5-584a3b6a6555",
    "title": "How to adjust the console logs filters matching parameters? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/how-to-adjust-the-console-logs-filters-matching-parameters.html",
    "section": "How to adjust the console logs filters matching parameters?",
    "content": "How to adjust the console logs filters matching parameters? Go to Run â£ Run Configurationsâ¦ â£ select a run configuration â£ open Filters tab . Here you can adjust how many characters per line (between 1-999, default 256) and how many consecutive lines (between 1-99, default 8) can be matched by a filter. These limitations prevent inifinite recursive matching if a log message does not follow a standard pattern or it is too long. How to copy the full path to the file in the current editor? When I switch to Block (Column) Selection mode the font changes",
    "section_path": [],
    "tokens": 98,
    "source": "scraped"
  },
  {
    "id": "8015d023-0bfa-4afd-94b7-f12d30ca92e0",
    "title": "Whitespace | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/code-formatting/whitespace.html",
    "section": "Whitespace",
    "content": "Whitespace Trim end of line whitespace (ro.amiq.vlogdt/format.whitespace.trim_end_of_line) - When enabled, end of line whitespace is deleted. Before After Trim Whitespace Lines (ro.amiq.vlogdt/format.whitespace.trim_whitespace_line) - When enabled, whitespace line are deleted. Before After Compact whitespace groups (ro.amiq.vlogdt/format.whitespace.compact) - When enabled, consecutive whitespace characters are trimmed to a single space character. It does not affect indentation, that is the whitespace at the beginning of a line is not affected by this option. Before After Compact consecutive empty lines (ro.amiq.vlogdt/format.whitespace.compact_consecutive_empty_lines) - When enabled, consecutive empty lines are compacted into groups of lines whose number is less than or equal to a specified value. It does not affect the empty lines inside multi-line comments. Maximum number of consecutive empty lines (ro.amiq.vlogdt/format.whitespace.maximum_nof_consecutive_empty_lines) - Consecutive empty lines are compacted when their number exceeds this value. Before After (Preference is set to â1â) Add whitespace before (ro.amiq.vlogdt/format.whitespace.add_before) - Space separated list of tokens to add whitespace before. Before After (â=â token) Add whitespace after (ro.amiq.vlogdt/format.whitespace.add_after) - Space separated list of tokens to add whitespace after. Before After (â=â token) Remove new line before (ro.amiq.vlogdt/format.whitespace.remove_nl_before) - Space separated list of tokens to remove new lines before. Before After (â=â token) Remove new line after (ro.amiq.vlogdt/format.whitespace.remove_nl_after) - Space separated list of tokens to remove new lines after. Before After (â=â token) Code Formatting Indentation",
    "section_path": [],
    "tokens": 214,
    "source": "scraped"
  },
  {
    "id": "91866283-8683-4475-a85c-ecd846406ff4",
    "title": "Extract to Method | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-assist-proposals/extract-to-method.html",
    "section": "Extract to Method",
    "content": "Extract to Method You can easily move a code fragment to a separate new method. This is called extract method refactoring. It helps keeping methods shorter and easier to understand. Select a block of actions and press Ctrl + 1 , select Extract to task or Extract to function from the list of quick assist proposals and press Enter . A new method is created containing the selected code fragment, and the selection is replaced with a method call. Note Any local variables declared prior to the code fragment you extracted become arguments of the newly created method. Each argument direction is computed accordingly: input for arguments that are only read output for arguments that are only written inout for arguments that are both read and written in the selected block of actions Note By default, if and loop conditions are evaluated to the logic data type, according to the IEEE 1800-2023 Standard for SystemVerilog. You can enforce the data type to bit by going to Window â£ Preferences â£ DVT â£ SystemVerilog â£ Refactoring and enabling Enforce condition data type to bit . This preference applies only when you select the whole condition. Tip You may change the extracted method name in the edit box, right after the extract action is completed. Tip You can change the method signature by editing the Method Code Templates Tip You can also Right - Click in the editor and go to Refactor > Extract to Task or Extract to Function . Extract to Variable Extract to Module",
    "section_path": [],
    "tokens": 255,
    "source": "scraped"
  },
  {
    "id": "ddf396c0-09fb-4405-8900-31f49a85f069",
    "title": "Runtime UVM Configuration Queries | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/uvm-support/runtime-uvm-configuration-queries.html",
    "section": "Runtime UVM Configuration Queries",
    "content": "Runtime UVM Configuration Queries After setting a runtime elaborated Verification top, the following views are automatically populated to help you browse and debug the testbench structure and configuration: Verification Hierarchy View Registers View Factory Overrides View Config DB View UVM Support Static UVM Configuration Queries",
    "section_path": [],
    "tokens": 45,
    "source": "scraped"
  },
  {
    "id": "ca3ce296-6d2e-4379-b43f-c082f989b42f",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.50",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "719eff66-cc30-4900-bff9-610a1e1a1198",
    "title": "Custom Pragmas | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/custom-pragmas.html",
    "section": "Custom Pragmas",
    "content": "Custom Pragmas You can enable the following features in the editor for regions of code enclosed in comment pragmas: code folding background color receive a read-only notification when editing within the region To define pragmas for a project, Right click on the project in the Project Explorer view and go to Properties â£ DVT â£ Custom Pragmas . User defined custom pragmas are stored in the .dvt/custom_pragmas.xml file. custom_pragmas.xml file syntax <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <!DOCTYPE pragmas PUBLIC \"-//DVT//custom_pragmas\" \"custom_pragmas.dtd\"> <pragmas version=\"1\"> <pragma startPragma=\"custom pragma start\" endPragma=\"end custom pragma\" enabled=\"TRUE\" colorEnabled=\"TRUE\" color=\"255;0;0\" readOnly=\"TRUE\" description=\"...\"/> </pragmas> Custom pragmas can be shared using Settings Management . Custom pragmas defined through Settings Management are not editable and are marked with gray color in the projectâs property page. For identical pragmas defined in multiple locations, the precedence is: pragmas defined in .dvt (the last defined pragma has the highest priority) pragmas coming from $DVT_USER_SETTINGS/custom_pragmas.xml pragmas coming from $DVT_COMMON_SETTINGS/custom_pragmas.xml Overridden pragmas are marked with a strike out line. Note Two pragmas are identical if they have the same start pragma or end pragma. Note A read-only notification does not prevent editing within the region. Note You can nest at most 3 custom pragmas. Note DVT flags the following incorrect pragma usages: CUSTOM_PRAGMA_NESTING_EXCEEDED : More than 3 nested custom pragmas found CUSTOM_PRAGMA_UNEXPECTED_END : No # start found CUSTOM_PRAGMA_MISMATCH : Expecting # found # CUSTOM_PRAGMA_NO_END : No matching # end pragma found Common Shortcuts DVT Resource Monitor",
    "section_path": [],
    "tokens": 240,
    "source": "scraped"
  },
  {
    "id": "0e5eeb2d-045b-4191-b056-0d3da895111d",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#17.1.37",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "09aa34b4-826a-4bc6-ad5e-eb9976a38453",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.46",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "40b97ea1-ff4c-4901-a0e7-3ca0de2769d7",
    "title": "Macros and Quick Macros Views | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/macros-support/macros-and-quick-macros-views.html",
    "section": "Macros and Quick Macros Views",
    "content": "Macros and Quick Macros Views The Macros View and Quick Macros View present all the macros in the project and allow you to quickly locate a macro definition in code. Macro Expansion Reminders (TODO Markers)",
    "section_path": [],
    "tokens": 35,
    "source": "scraped"
  },
  {
    "id": "f4487b4b-2a40-4d96-8a98-431944fc9c7f",
    "title": "Deprecated Settings Management (before DVT 3.5) | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/settings-management/deprecated-settings-management-before-dvt-35.html#show-changed-preferences-dialog",
    "section": "Deprecated Settings Management (before DVT 3.5)",
    "content": "Deprecated Settings Management (before DVT 3.5) DVT settings use the Eclipse Platform settings mechanism. By settings we refer to every option that can be configured by users and are restored between different invocations of DVT. There are 3 types of settings: Workspace Settings Project Settings Other Settings Workspace Settings Workspace settings are mainly those that can be set in Window â£ Preferences dialog. These settings are persisted in the <workspace>/.metadata/.plugins/org.eclipse.core.runtime/.settings/ There are also other settings that can be stored under <workspace>/.metadata/ directory and can be considered workspace settings. Some of them are: The paths of the imported workspace projects The last position of different dialogs The settings of different views (e.g. column order) Project Settings These settings are always correlated to the project and are saved under the project directory. It is very important to understand that every Eclipse plugin can create and maintain its own set of files with settings related to that plugin. .project file By default, the Eclipse Platform creates in every project directory a .project file that can contain the following information: Project name Project Natures (what kind of project is that and what are the plugins that should handle this project) Linked resources information (files or directories from outside the project that are linked into the projectâs tree) .dvt directory This directory is used to keep all the settings needed for a DVT project. Some of the files stored in this directory are: *_top_files or default.build used for compilation configuration. (See Build Configurations ) *_linter_waivers.xml and *_linter_ruleset.xml used for linter configuration Other Settings There are another two places where DVT can store information. $HOME/.dvt.gtkrc file is used to store GTK Theme settings on linux platforms. Since Eclipse Platform 3.x doesnât support themes, the feature uses this file to store the information about the colors. This…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "0a4c47cb-3e31-44d7-8131-ba7e2647823c",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#16.1.16",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "049fdb35-3e59-4fa0-9c17-dbeb2e4d9fc8",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#25.1.2",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "3dfdf169-c27a-4a61-bcef-0f7405a46622",
    "title": "Install DVT Using a pre-packed Distribution | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/installation/distribution.html",
    "section": "Install DVT Using a pre-packed Distribution",
    "content": "Install DVT Using a pre-packed Distribution The recommended way of installing DVT is by using a pre-packed distribution available on the site under the Download page. For Linux distributions you can choose one of the 4 distribution flavors depending on the GTK version installed in your OS: Eclipse 4.22 - requires GTK+ 3.22.0 Eclipse 4.19 - requires GTK+ 3.22.0 Eclipse 4.11 - requires GTK+ 3.10.0 Eclipse 4.7 - requires GTK+ 2.24.0 or GTK+ 3.0.0 Eclipse 4.6 - requires GTK+ 2.18.0 or GTK+ 3.0.0 Installation Checklist Install DVT Using the Update Site",
    "section_path": [],
    "tokens": 91,
    "source": "scraped"
  },
  {
    "id": "803a0408-d530-4d5b-9769-51e0efc8edec",
    "title": "Workspace and Workbench | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/getting-started/workspace/workspace-and-workbench.html",
    "section": "Workspace and Workbench",
    "content": "Workspace and Workbench Work Workspace and workbench are different terms for different concepts, however they sound quite similar to be mistakenly interchanged. The âworkâ prefix has a tendency to make us lose the interest, so I guess we donât get to hear clearly the âspaceâ or âbenchâ that follow, hence both workspace and workbench collapse under the annoying âsomething about workâ. Workspace One of the first things you specify when you start Eclipse is the workspace location. The workspace is a directory that holds information about the projects you work on, as well as the Eclipse preferences (from layout to behavior). We can say that the workspace âholdsâ the Integrated Development Environment: the data you work on (organized in projects) and how you work with it (preferences). It is your âspace of workâ or âworking spaceâ or âworking universeâ. Depending on your style, you can do all your work in a single workspace, no matter how different projects in your life, for example a Web project to publish your photos, a Verification project and a Java project where you learn how to program. Or you can chose to have several workspaces, each one dedicated to a specific state of mind or universe of thinking. Workbench The workbench is practically the Eclipse main window. It is the bench where you organize your instruments, except that now you donât have power supplies, signal generators or oscilloscopes, but different views and editors . Views and editors are your instruments to manipulate sources and data. You arrange them at hand for a specific task (exploring, debugging, coding etc.). What instruments you use and how you lay them out on your bench ( workbench ) is known as a perspective : with what and from what angles you look at your data. Eclipse allows you…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "fb4c6721-25e8-4dd6-9ef3-314986a0d810",
    "title": "External | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/code-formatting/external.html",
    "section": "External",
    "content": "External When enabled, all other code formatting options are disabled and code formatting is performed using the given command. Format Multiple Files Preferences Keys",
    "section_path": [],
    "tokens": 24,
    "source": "scraped"
  },
  {
    "id": "3225028f-2b0d-4a02-a436-cca4a6058c82",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.29",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ab5032f6-5cb2-48ca-9be5-3d6d292b3190",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.4.14",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "a2492f6a-d3d3-484c-9849-43b4b1037506",
    "title": "Workspace permissions | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/workspace-permissions.html",
    "section": "Workspace permissions",
    "content": "Workspace permissions A possible solution for the following errors (or similar issues) is to add write permission for the Workspace you are currently using and all files inside it . Keywords: unable to save, failed to write, ResourceException, unable to store; Eclipse does not start, there is no Workspace, metadata or log file created How do I link mylyn with Bugzilla?",
    "section_path": [],
    "tokens": 61,
    "source": "scraped"
  },
  {
    "id": "eb0c0427-77e7-416d-ad84-be825d94d8ff",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.23",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "1fdcee8f-863f-4593-9782-a733123f6770",
    "title": "Add Port to Module from Selected Field | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/refactoring/add-port-to-module-from-selected-field.html",
    "section": "Add Port to Module from Selected Field",
    "content": "Add Port to Module from Selected Field You can use the Add Port to Module to add a selected field as a port easy and fast. Right click field wire1 in module A . Select Refactor > Add Port . You can optionally change the new generated port name. Select a direction for the port and press Preview or OK . Connect Instances Across the Design Hierarchy Add New Port to Module",
    "section_path": [],
    "tokens": 72,
    "source": "scraped"
  },
  {
    "id": "cb0bd2af-c24d-4c7a-afcf-7d31be88eac0",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.49",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "b64d36b9-2c69-4b67-891e-6e0feb19c34e",
    "title": "Syntax | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/command-line-interface/syntax.html",
    "section": "Syntax",
    "content": "Syntax Usage dvt_cli.sh [-h[elp]] [-s[ilent]][-noexit] [-nostart] [-timeout <sec>] [-net_timeout <sec>] [-workspace <dir>] [-eclipsespace <dir>] [-heap_size <size>] [-stack_size <size>] [-options <opt>] [-import_workspace_settings <dir>] [-force_import_workspace_settings <dir>] [-eclipse_ini <file>] [-eclipse_args <args> --] [-vscode] [-ls_id <id>] <command> -h[elp] Show this help. -s[ilent] Suppress script output (WARNING, INFO), allow only ERRORS and DVT CLI command results. -noexit If the script starts a new DVT do not exit until DVT is closed. (Not supported on Windows) -nostart Do not start a new DVT, if no DVT is found wait -timeout <seconds> before ending. -timeout <sec> Maximum number of seconds to wait for a DVT session to start. Default is 100. -net_timeout <sec> Maximum number of seconds to wait for a response from DVT after a session has started. Default is 10. -workspace <dir> Path to the Eclipse workspace. If not specified $DVT_WORKSPACE_PATH will be used. If $DVT_WORKSPACE_PATH is not set it will use the last workspace where a DVT was started. -eclipsespace Path to a custom Eclipse storage directory to be used instead of ~/.eclipse. (Not supported on Windows) -heap_size <size> Set the Java heap size (syntax is <N>[g|G|m|M|k|K]). Default is 3072m. -stack_size <size> Set the Java thread stack size (syntax is <N>[g|G|m|M|k|K]). Default is 4m. -options <opt> Comma separated list of options (only for Linux): disable_browser - do not use SWT browser component and skip auto - config disable_swt_auto_config - do not auto - config SWT GTK version and SWT browser engine disable_chromium - do not use bundled Chromium browser engine disable_xulrunner - do not use bundled XULRunner browser engine disable_webkit - do not use OS 's WebKit browser engine disable_cairo - do not use Cairo advanced graphics library disable_force_gtk2 - do not force Eclipse to use GTK2 disable_gtk_theme - do not use custom GTK2 themes generated through DVT disable_force_classic_theme - do not force Eclipse…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "a79f394f-7d15-4103-981b-b4894b34e0c4",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.42",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "7dfa1c51-7cfb-46fa-bfc5-fe196c131258",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#22.1.20",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "20d58b3b-5fc5-4307-a3f5-e60f0c72bef9",
    "title": "Use Cases | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/settings-management/use-cases.html#external-builders",
    "section": "Use Cases",
    "content": "Use Cases Using the same settings across all workspace and projects can be achieved by configuring the corresponding file and adding it in the user location (where $DVT_USER_SETTINGS points to). To share the settings with other users you must put the setting files in a common location and set $DVT_COMMON_SETTINGS to that location. A recommended work-flow for sharing any type of settings with other users is: Start DVT in a clean workspace Customize preferences Define run configurations, compile waivers, etc. on a reference project and move the corresponding files in the user location (available under DVT-Settings/user ) Close DVT and move the files from the user location to a common location where all users can point the $DVT_COMMON_SETTINGS system variable Memory Allocation Thresholds Create or modify the eclipse.ini file in the user settings location and add the new memory arguments. For example: -vmargs -Xmx2048m -Xss1m After adding the new memory thresholds every DVT instance will use them. If you want to change the memory only for a single invocation of DVT you can use the dvt.sh arguments (-heap_size corresponding to -Xmx and -stack_size corresponding to Xss) in the command used to invoke DVT. To share this configuration with other users you can put the eclipse.ini file in common location. Users will still be able to change the settings using an eclipse.ini in the user location. Workspace Preferences Workspace Preferences are automatically saved in the user location preferences.ini file. Reusing them across workspaces is automatically achieved. To share a set of preferences you must copy the preferences.ini file in the common location. Some workspace preferences that are usually shared between users are: Key Bindings - General â£ Keys Code Templates - DVT â£ Code Templates Task Tags - DVT â£ Task Tags Formatting - DVT â£ e Language / SystemVerilog /…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "75b3bf71-b85e-46ea-a06b-c1e1e210eb11",
    "title": "Working in Chat | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/ai-assistant/working-in-chat.html",
    "section": "Working in Chat",
    "content": "Working in Chat AI Assistant provides a dedicated chat view where you can exchange messages with the LLM on any topic. You can start a new chat session in several ways: Using Start a New Chat Session command. Using Start a New Session from Blueprint command, where you can select any built-in or custom blueprint that targets the chat. Using the built-in blueprint commands starting with DVT AI Blueprint and targeting the chat. Cloning an existing session from the chat viewâs Sessions page. Using Run Last Session in Chat command. The chat view has two pages, one with the actual chat and another one with all the sessions: Sessions page allows you to switch between sessions and to manage previous sessions. Chat page allows you to exchange messages with the LLM. Itâs divided in two sections, the messages area with pairs of user requests and LLM replies and the prompt area where you input your requests. The prompt area allows you to write your requests and has several features. Highlight: @snippets and #symbols are highlighted so you can easily identify them. Indicates that the actual request will have a different content after the prompt will be expanded. To preview the message before itâs being sent use the Preview Message before Sending button. Autocomplete: Speeds-up @snippet and #symbol insertion. Automatically appears when needed (e.g.Â after writing @ or #). Can be triggered using Ctrl + Space . List of Buttons, Shortcuts and Commands The view has a toolbar with the following buttons: Show All Sessions / Show Last Chat Session Go to the list of sessions and back. Start a New Chat Session Start an empty chat session. Save Chat Session as Blueprint Create a new blueprint with all the messages from this session. The prompt has the following buttons: Send…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "54ee295d-b5b8-4638-aed2-7116fa08107b",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.11",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "f6754674-8a6f-4c8f-ae16-1c615e70bfbd",
    "title": "Inactive Code Highlight | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/macros-support/inactive-code-highlight.html#overview",
    "section": "Inactive Code Highlight",
    "content": "Inactive Code Highlight Overview DVT editor marks the inactive code (i.e. code that is not compiled due to ifdef / ifndef ) with a colored background. Settings You can enable/disable the highlight and choose the highlight color: navigate to Window > Preferences then expand DVT > SystemVerilog > Editor . In the panel on the right side you can find the Inactive code highlight settings group. Macros Support Macro Expansion",
    "section_path": [],
    "tokens": 70,
    "source": "scraped"
  },
  {
    "id": "9b1af873-5387-4b97-8c61-699b1f5ad770",
    "title": "Hyperlinks | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/hyperlinks.html",
    "section": "Hyperlinks",
    "content": "Hyperlinks Place the mouse cursor over an identifier in the editor while holding down the Ctrl key. The identifier becomes a hyperlink , and a list of navigation options is displayed. The first option is Open Declaration . This is the default action when you click directly on the identifier. Hyperlinks are available for all classes, modules, methods, fields, signals, macros, etc. in the source code files that DVT analyzes in your project. Open Declaration Tip Keyboard alternative: place editor cursor on an identifier and press F3 . Open Extern Method Implementation Open Super Implementation Available only if the method under cursor overrides a virtual method inherited from a superclass. Opens the implementation of the overridden method: Open Child Implementation Available only if the method under cursor is overridden in a subclass. If there is only one override, it is opened. Otherwise the Quick Type Hierarchy View is opened. Open Instance Available only for a design element under cursor which is instantiable. It jumps to the corresponding instance from design (which is also available in the Design Breadcrumb Navigation Bar). Open â¦ Type Jump to Assignment Jumps to the next assignment of the signal under cursor in the current editor. Jump to Case Branch Available only on enum constants and parameters. Jumps directly to the case branch where element under cursor is used. Jump to an Imported File Jump to a Macro Definition Jump to Connected TLM Port Jumps to the next connected TLM port of the TLM port under cursor in the current editor. Show Connected TLM Ports Show in Config DB View Shows the selected set or get call in the Config DB View . Note You need to perform UVM Runtime Elaboration in order to populate the Config DB View. Show Associated Getters in Config DB View…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "fb280476-a3da-4ee2-b762-2ab9e3fffdbb",
    "title": "Non Standard Checks | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/compile-checks/non-standard-checks.html",
    "section": "Non Standard Checks",
    "content": "Non Standard Checks ID Message Notes/Examples ASSERTION_IN_CUNIT_SCOPE Deferred immediate assertion not allowed in compilation-unit scope assert #0 (0 == 0); EXTERN_DECLARATION_IN_CUNIT_SCOPE Extern function not allowed in compilation-unit scope extern int foo(); FATAL_SYSTEM_TASK_FIRST_ARGUMENT Expecting 0, 1 or 2 as first argument to â$fatalâ system task $fatal(4, \"Sorry\"); BEGIN_END_OUTSIDE_GENERATE âbegin/endâ generate block not allowed CONFIGURATION_RULE Unexpected configuration rule MISSING_CONFIGURATION_RULE_SEMI Expecting â;â after configuration rule instance top.sub.u1 liblist gateLib TIMEUNIT_IN_CLASS_SCOPE # declaration not allowed in class scope class foo ; timeunit 100 ps ; timeprecision 10 fs ; endclass FUNCTION_PROTOTYPE Expecting âfunctionâ keyword in prototype declaration extern void foo(); PURE_QUALIFIER_POSITION âpureâ qualifier not allowed before # qualifier protected pure local virtual function void wrong_order(); CONSTRUCTOR_LIFETIME âautomaticâ lifetime for class constructor not allowed class foo ; function automatic new (); endfunction endclass CLASS_VARIABLE_LIFETIME âautomaticâ lifetime for class variable # not allowed class foo ; Â Â Â Â automatic int bar ; endclass CONSTRAINT_DEFAULT_QUALIFIER âdefaultâ qualifier for constraint not allowed default constraint a_cons { Â Â Â Â x == 0 ; Â Â Â Â y <= 0 ; } HARD_SOLVE_BEFORE âhardâ qualifier not allowed constraint c_cons { Â Â Â Â x == 0 ; Â Â Â Â y <= 0 ; Â Â Â Â solve x before y hard ; } SOFT_AFTER_EXPRESSION âsoftâ must be placed before the expression constraint c_cons { Â Â Â Â x dist { 0 , 1 } soft ; } SOFT_BEFORE_SOFT âsoftâ not allowed before âsoftâ constraint c_cons { Â Â Â Â soft soft x ; } SOFT_BEFORE_UNIQUE âsoftâ not allowed before âuniqueâ constraint c_cons { Â Â Â Â soft unique {} } SOFT_BEFORE_IF âsoftâ not allowed before âifâ constraint c_cons { Â Â Â Â soft if ( condition ) {} } SOFT_BEFORE_FOREACH âsoftâ not allowed before âforeachâ constraint c_cons…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "4069a85a-bc15-4289-be09-5b0ae1dc379d",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#23.2.30",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "5b278b59-f36e-4b5e-9a90-a6588dad71fc",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.6",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "d7f043d9-081a-471e-aedb-4ae10060325e",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#15.1.19",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "2165735e-b630-4cbc-9477-1446a25454fd",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.4.9",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "b8ff1213-879b-48b9-9d8d-27d63a522288",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.4.11",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "58d55e0e-a0ec-4881-b6f5-e8fbc1d5a2e7",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.1.15",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "c5378d1d-b795-48c1-8964-9a7ddc015119",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.4",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ea7ff527-ed3e-4970-a46d-63ddeaffb4d6",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.2.8",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "737be264-999f-4ca8-9fe3-b148b4c94371",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#20.1.33",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "4117d9ec-8d3b-41c9-b894-6fac095fa852",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#23.1.7",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "44f4fbe2-d483-4c40-ac5a-38830a2a2b04",
    "title": "Override Constraints Using Autocomplete | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/content-assist/override-constraints.html",
    "section": "Override Constraints Using Autocomplete",
    "content": "Override Constraints Using Autocomplete Place your cursor inside a class and then press Ctrl + Space to trigger Content Assist . When doing so, the list of proposals includes constraints that are available to override. The adjacent Proposal Tooltip includes information about the action that will be performed. Upon choosing the constraint, a corresponding constraint stub will be generated at the cursorâs location. The constraints may be filtered by typing additional keywords such as static . Tip You can change the constraint signature by editing the Constraint Code Templates Override Functions Using Autocomplete Implement Extern Functions Using Autocomplete",
    "section_path": [],
    "tokens": 98,
    "source": "scraped"
  },
  {
    "id": "13436029-6d86-40a1-8efd-2e4b682e14c6",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#18.1.48",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "f3290543-8efc-4c16-8780-84398d1819b8",
    "title": "Compilation Speed-up | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/application-notes/compilation-speed-up.html#how-to-exclusively-compile-the-api",
    "section": "Compilation Speed-up",
    "content": "Compilation Speed-up Several DVT directives can optimize build times by either condensing the scope of the full build analysis or by restricting certain features within specific code segments. This application note addresses questions related to performance, specifically regarding the duration of the full build process and the amount of memory used. How to exclude files from compilation? You can achieve this by using the +dvt_skip_compile directive . This allows DVT to bypass specific files completely during build. Benefits of this approach include reduced build times and lower memory usage. However, this may lead to false errors when DVT does not compile definitions for certain types (such as classes, modules, typedefs, etc.). To address these errors, you may need to use Compile Waivers . The directive is available in multiple variations: +dvt_skip_compile+<simple_pattern> +dvt_skip_compile+not+<simple_pattern> +dvt_skip_compile+regex+<regex_pattern> +dvt_skip_compile+regex+not+<regex_pattern> For simple patterns, wildcards like * (to match any sequence of characters) and ? (to match a single character) are available. The provided patterns are matched against file absolute paths. Examples To exclude every file located within the /dir1/ directory + dvt_skip_compile +*/ dir1 /* To exclude everything but files within the /dir1/ directory + dvt_skip_compile + not +*/ dir1 /* To exclude files in both the /dir1/ and /dir2/ directories, you have two options. You can sequentially use two directives: + dvt_skip_compile + not +*/ dir1 /* + dvt_skip_compile + not +*/ dir2 /* Alternatively, you can achieve the same effect with a single regular expression directive: + dvt_skip_compile + regex + not + ( .*/ dir1 /.*|.*/ dir2 /.* ) This approach allows you to tailor the compilation process precisely, ensuring that only the desired files are compiled, thereby reducing build time and memory usage. Note If +dvt_skip_compile+not is the first skip directive DVT encounters, it automatically assumes that a +dvt_skip_compile+ directive has been…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "768fc3ea-e530-40db-a97d-04c7342ec01f",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.34",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "b02bcdb5-e605-44a2-a110-02dc4c579543",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.0.2",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ddd10f50-de3d-4e1a-a8ae-56511a03c724",
    "title": "Xilinx Libraries Compilation | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/build-config/xilinx-libraries-compilation.html#precompilation-support-for-xilinx-libraries",
    "section": "Xilinx Libraries Compilation",
    "content": "Xilinx Libraries Compilation In order to compile Xilinx libraries: specify the required libraries using the +dvt_init_xilinx directive specify the Xilinx installation path (ISE or Vivado), unless $DVT_XILINX_HOME system variable is set For example: + dvt_init_xilinx + UNISIM + UNIMACRO_VER + dvt_setenv + DVT_XILINX_HOME =/ apps / xilinx / Vivado / 2014.2 / The available libraries are UNISIM, UNIMACRO, UNIFAST, XILINXCORELIB, CPLD, SIMPRIM, SECUREIP_VER, UNISIMS_VER, UNIFAST_VER, UNIMACRO_VER, SIMPRIMS_VER, XILINXCORELIB_VER, UNI9000_VER, CPLD_VER, RETARGET, XPM. Precompilation support for Xilinx Libraries By default, the Verilog/SystemVerilog Xilinx Libraries are automatically precompiled in order to speed up the full build of the project. Note To disable the default precompilation of Xilinx Libraries you can use the +dvt_disable_library_precompilation+XILINX directive. SystemVerilog OVM or UVM Library Compilation Intel(Altera) Quartus Libraries Compilation",
    "section_path": [],
    "tokens": 122,
    "source": "scraped"
  },
  {
    "id": "8a87d228-ed48-4a84-9680-f0e186572311",
    "title": "Commands | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/command-line-interface/commands.html#import-an-existing-project",
    "section": "Commands",
    "content": "Commands Create a Project (Mixed-Language Capable) createProject <project_path> [-workingset [-newwindow]] [-force] [-close_others] [-f|-F <file_path>] [-top <top_file_path>] [-test <test_file_path>] [-map <link_name> <target_path>] [-name <project_name>] [-lang <lang>] [-perspective <perspective>] [-clearcase] [-git <repo1:repo2:...:repoN>] [-p4 <connection_parameters>] [-openResourceFilterDialog] [-include auto[:<threshold>]] [-include first_level] [-disable_fs_check] [-exclude|include :ref:`name`][,root=folder1[:sub/folderN]][,applies=f|d|rf|rd]] [-build <name>] [-<name>.build <build configuration directives ...>] Mandatory arguments: <project_path> Absolute path to project (must exist). -lang Enable support for <lang> language: E, VLOG, VHDL, CPP, CPP_EXT, PSS, SLN, SDL. CPP, CPP_EXT are only valid when DVT CDT Integration feature is installed. At least one language must be specified. Optional arguments: -<name>.build Create the build configuration file <project>/.dvt/<name>.build with <build configuration directives> as content. All flags up to the end of the command line, or up to the next -<name>.build flag are considered build configuration directives. This flag cannot be used in conjunction with -f, -F, -test, or -top. -build <name> Set <name> as active build configuration. -clearcase Share project with ClearCase Eclipse plugin. -include auto[:<threshold>] Automatically create resource filters, based on the active build configuration. Only compilation related directories are included, for example +incdirs, -y libdirs, $ SPECMAN_PATH entries and parent directories of top files. If specified, directories with more than <threshold> files will be excluded; otherwise, all relevant directories containing compiled files will be included. Some configuration resources are always included: .buildpath, .classpath, .cproject, .dvt, .project, .pydevproject, .settings [NOTE] The -include auto argument can be combined with any further user-specified include or exclude filters -include first_level Automatically create resource filters to include only the files and directories (without their content) located directly under the project root. The directories' content can be brought on demand, level by level, by double clicking on a directory in the Project Explorer View. Some configuration resources are always included: .dvt, .settings For more details see the Lazy Bring-up Resources chapter. -disable_fs_check By default,…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ba6f0961-f537-42b6-bf02-f0df87a0b9f8",
    "title": "Tips and Tricks | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/tips-and-tricks/index.html#code-navigation",
    "section": "Tips and Tricks",
    "content": "Tips and Tricks The following tips and tricks give some helpful ideas for increasing your productivity. Editing Content assist Content assist provides you with a list of suggested completions for partially entered text. In the editor press Ctrl + Space . Module Automatic Instantiation You need to type the first letters of the module name, then press Ctrl + Space three (3) times.You can recognize module instances by their icon, it looks like a chip with ports ready to be glued in. Expand Macros (Apply Preprocessing) You can apply preprocessing over a selected section of code in order to see how macros are expanded. You have multiple options in the right-click context menu Macros. To expand them in the source file, choose Expand One Level Inline or Expand All Levels Inline . To expand them in a temporary file, choose Expand One Level or Expand All Levels . Note You can also expand all macros in the current file by selecting either Expand All Macros Inline , for expansion in the source file, or Expand All Macros , for expansion in a temporary file. Trace Macro Errors To debug macro usage errors (especially if macros in macros are used) you can see how the error is propagated from macro to macro (the error trace) either by: going with the mouse over the error marker on the left and right click or selecting the error in the Problems View , right click and choosing Macro Trace The macro error trace will be presented in the Console View with hyperlinks to source. Code templates Code templates are presented in content assist if applicable. Matching begin - end If you double click on/after begin â end, function â endfunction etc. the block is highlighted. Mismatched endif You can use comments after endif to…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "1afe2b5b-a0b6-4d05-acd3-112f0cfba67d",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.24",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "7d694935-47ed-4fd9-af07-5a9222f3493a",
    "title": "Reference | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/ai-assistant/reference.html",
    "section": "Reference",
    "content": "Reference List of Commands AI Assistant provides a list of commands that you can quickly invoke using Quick Access ( Ctrl + 3 ) in Eclipse and Command Palette ( Ctrl + Shift + P ) in VS Code. Some of these commands can also be invoked from the editorâs context menu or using the buttons available in the chat view. In general, the commands are filtered based on the context in which the action is possible. Commands for built-in blueprints appear in the list prefixed with DVT AI Blueprint. The rest of the commands are prefixed with DVT AI. Show All Commands Lists all AI Assistant specific commands. Stop Generation Stop LLM reply generation. Set Language Model Set the default LLM that will be used from now on for new sessions. Start a New Session from Blueprint List all the built-in and custom blueprints. The selected blueprint will start a new session. Start a New Chat Session Start an empty chat session. Run Last Session in Chat Rerun the last session only in chat, regardless of where it ran previously. Open Protect File Open the AI protect file. Send File to Prompt Focus the AI chat prompt and insert the current file as a symbol (e.g. #file:<filename>). Send Selected Lines to Prompt as Anchor Focus the AI chat prompt and insert the currently selected lines. The selected lines will be inserted as a symbol (e.g. #file:<filename>:<startLine>-<endLine>). If the file content changes from the command invocation until the prompt is sent to the LLM, the symbol expansion will include the updated content. Send Selected Lines to Prompt as Code Block Focus the AI chat prompt and insert the currently selected lines. The selected lines will be inserted as a code block surrounded by ``` delimiters. Edit Code Completion Blueprint Create…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "bc96bedf-e23b-4e2e-a3e0-37b776bdbc4f",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#22.1.34",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "8d2137d2-00d5-4ccc-a53f-d0e33b69a807",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#24.2.24",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "e026deca-3357-453e-ac2e-fc988397c525",
    "title": "Compile Waivers | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/compile-waivers.html#compile-waivers-examples",
    "section": "Compile Waivers",
    "content": "Compile Waivers You can use waivers to change the severity (promote/demote) or disable the problems reported by DVT during compilation. Promote Warning -> Error Demote Error -> Warning Disable Hide Restore Restore a waived problem to its default (originally reported) severity Waivers are applied in order. Multiple waivers may be applied to the same problem. Waivers are defined per project, in the .dvt/waivers.xml file. For more flexibility, on top of the project level compilation waivers, DVT allows you to use compilation waiver files specific to a build configuration. To do that, simply add in the build configuration file the +dvt_compile_waivers_file+ directive followed by the path to the desired file. To quickly create a waivers file click on the Edit waivers button in the Problems View . The .dvt/waivers.xml is created with a default content and opened. You can easily create your own waivers from the default generated ones. In the waivers editor you can use autocomplete for tags, attributes and attribute values. To quickly create a new waiver, in the Problems View right click on any problem reported by DVT and waive it. DVT proposes some default values for the waiver file, description, path and message. You can easily change them to fine-tune the waiver. Another easy way to create a new waiver right from the editor is by using Waive Compilation Problems . You can include other waiver files using: < include path = \"/path/to/included_waivers.xml\" /> The path can be absolute or relative to the project root, and can use environment variables. Compile Waivers Examples Use Case Solution I want to hide all problems from a library that I do not control. < waiver name = \"Disable all from library folder.\" severity = \"DISABLED\" > < match path = \"/path/to/library/*\" /> </ waiver > I want to hide some…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "28e5bd85-2761-4436-9dc0-ec2556f3af4b",
    "title": "Workspace in use, cannot launch eclipseâ¦ | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/q-n-a/common/workspace-in-use-cannot-launch-eclipse.html",
    "section": "Workspace in use, cannot launch eclipseâ¦",
    "content": "Workspace in use, cannot launch eclipseâ¦ Problem : Iâm unable to select an existing workspace after my eclipse program that was accessing it was not shutdown properly. I get a Workspace in Use error when there are clearly no other eclipse instances running on my machine. Solution : If you are sure there is no eclipse looking at your workspace (not even another user), then you must remove the lock file located in the workspace at path_to_workspace/.metadata/.lock . On Windows, if you cannot delete this file (because another process is using it), then close all eclipse IDE sessions, do Ctrl + Alt + Delete to bring up Windows Task Manager, select Processes page, and delete javaw.exe . Are there any backup files in Eclipse? Locking is not possible in the directoryâ¦",
    "section_path": [],
    "tokens": 131,
    "source": "scraped"
  },
  {
    "id": "1b587ea2-9587-458d-85b5-43a798756866",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#2.9.6",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "6f6bed6d-db28-436b-96a5-b9b4e6732b6e",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#21.1.5",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "c7e01656-a825-434b-8463-a1775ad0a692",
    "title": "Quick Search in Views | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/quick-search-in-views/index.html",
    "section": "Quick Search in Views",
    "content": "Quick Search in Views Most DVT views have a Quick Search bar: The Quick Search bar allows you to easily locate a specific element by typing a few letters from its name. Besides simple Regex ( ? for any character and * for any character sequence), more advanced patterns are supported, for example CamelCase or hierarchical patterns like top//fifo/c.pi_data . CamelCase Simple Regex Hierarchical Search Search for Members Search Port in Design Hierarchy Search Port in Verification Hierarchy Search all UVM Phase Overrides Search Global API Show Instances in the Design Hierarchy View CamelCase",
    "section_path": [],
    "tokens": 94,
    "source": "scraped"
  },
  {
    "id": "6e71c4af-9ca6-4323-91e6-21454d0a6162",
    "title": "Use Cases | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/settings-management/use-cases.html#compile-waivers",
    "section": "Use Cases",
    "content": "Use Cases Using the same settings across all workspace and projects can be achieved by configuring the corresponding file and adding it in the user location (where $DVT_USER_SETTINGS points to). To share the settings with other users you must put the setting files in a common location and set $DVT_COMMON_SETTINGS to that location. A recommended work-flow for sharing any type of settings with other users is: Start DVT in a clean workspace Customize preferences Define run configurations, compile waivers, etc. on a reference project and move the corresponding files in the user location (available under DVT-Settings/user ) Close DVT and move the files from the user location to a common location where all users can point the $DVT_COMMON_SETTINGS system variable Memory Allocation Thresholds Create or modify the eclipse.ini file in the user settings location and add the new memory arguments. For example: -vmargs -Xmx2048m -Xss1m After adding the new memory thresholds every DVT instance will use them. If you want to change the memory only for a single invocation of DVT you can use the dvt.sh arguments (-heap_size corresponding to -Xmx and -stack_size corresponding to Xss) in the command used to invoke DVT. To share this configuration with other users you can put the eclipse.ini file in common location. Users will still be able to change the settings using an eclipse.ini in the user location. Workspace Preferences Workspace Preferences are automatically saved in the user location preferences.ini file. Reusing them across workspaces is automatically achieved. To share a set of preferences you must copy the preferences.ini file in the common location. Some workspace preferences that are usually shared between users are: Key Bindings - General â£ Keys Code Templates - DVT â£ Code Templates Task Tags - DVT â£ Task Tags Formatting - DVT â£ e Language / SystemVerilog /…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "0bdf5bfe-6b71-4254-9331-ca7ffad5ce05",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#25.1.5",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "75acf5f7-b06b-49a1-ac53-5b143c61ffd7",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#3.5.7",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "5e1724d7-b59d-4137-978b-42ead8883920",
    "title": "What is New? | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/whats-new/index.html#19.1.18",
    "section": "What is New?",
    "content": "What is New? Note #.# - major version - Includes new features, major enhancements, architectural changes, bug fixes. Since 2015, a major version is named in sync with the release year, for example the first major version of 2015 is 15.1. #.#.# - minor version - Includes bug fixes, minor enhancements. When switching to a new major version it is recommended to start in a new workspace. 25.1.11 (18 June 2025) Performance DVT-23012 UVM Runtime Elaboration: Improve execution performance when using soft constraints in specific scenarios Features DVT-21866 AI Assistant: Add new â@auto contextâ snippet to specify all relevant context DVT-21904 Code Formatting: Ability to automatically detect indentation based on the contents of a file DVT-23151 AI Assistant: Ability to automatically include relevant context in the first message of a new chat session Enhancements DVT-21341 Memory Monitor: Change heap histograms and logs location to .dvt/.profiling/memory_monitor/ DVT-22241 Precompilation support: Run the +dvt_precompiled_db_build_cmd for all failing precompiled databases DVT-22594 Build config: Add support for -makelibpost directive in xcelium.xrun compatibility mode DVT-22744 AI Assistant: Ability to edit predefined blueprints and snippets DVT-22872 Precompilation support: Database integrity should be checked in parallel when loading multiple databases DVT-22950 Precompilation support: Ability to run multiple precompiled_db_build_cmd in parallel DVT-22984 AI Assistant: Add new â@dependencies of selected fileâ and â@dependencies of #fileâ snippets DVT-22986 AI Assistant: Symbols and snippets that expand to code should include the file paths DVT-23003 AI Assistant: â@usages ofâ snippets should expand to the entire container that includes the usage DVT-23086 Precompilation support: Do not clear the build console content after save in precompiled auto configurations DVT-23097 Inspect View: Show the auto-detected indentation of a file DVT-23107 AI Assistant: Add new â@kind of selected containerâ snippet DVT-23108 AI Assistant: Add API to get the value of a setting DVT-23135 Precompilation support: Cancel the…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "d5b621a8-457e-4d7c-8d5b-efe8fd70fd81",
    "title": "FPGA Support | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/application-notes/fpga-support.html#precompilation-support-for-intel-altera-quartus-and-xilinx-libraries",
    "section": "FPGA Support",
    "content": "FPGA Support Intel(Altera) Quartus Use the New DVT Project Wizard (menu File â£ New â£ DVT Project` ) to create a DVT project in the same location as an existing Quartus project. All source files and settings defined in the Quartus project configuration files will be automatically recognized. If you want to create a DVT project in a different location from your Quartus project location you must tune the .dvt/default.build file: + dvt_init_auto # Note that the compilation root must be specified after the +dvt_init_auto directive + dvt_compilation_root +/ quartus / project / location Note Quartus projects are automatically recognized by the DVT build auto-configuration engine. For more details, see Auto-config . When the auto-configuration algorithm detects a Quartus project layout, it scans the existing Quartus project configuration files and automatically generates an equivalent DVT build configuration file (for example default.build.auto.1). If there is no Quartus project layout, this functionality can be triggered using the +dvt_autoconfig_force_quartus directive. It allows the auto-configuration algorithm to scan *.qip files specified in default.build using +dvt_autoconfig_quartus_qip+<qip_file_path> directive (see example below): + dvt_init_auto + dvt_autoconfig_force_quartus + dvt_autoconfig_quartus_qip + file1 . qip + dvt_autoconfig_quartus_qip + file2 . qip + dvt_autoconfig_quartus_qip + file3 . qip Note The New DVT Project Wizard automatically adds both Verilog and VHDL natures. You can manually adjust this setting. Intel(Altera) Quartus Auto-config Specific Directives Directive Description +dvt_autoconfig_quartus_project_revision+<revision_name> Use <revision_name>. +dvt_autoconfig_quartus_script_location+<script_file_path> For debugging purposes. Use <script_file_path> to analyze Quartus project configuration files. +dvt_autoconfig_disable_quartus Ignore Quartus project configuration files and fallback to default auto-config. +dvt_autoconfig_quartus_qip+<qip_file_path> Analyze the specified Quartus project configuration file in addition to any automatically detected ones. May be specified multiple times. +dvt_autoconfig_force_quartus Force quartus auto-config using the *.qip files specified within the +dvt_init_auto section. +dvt_autoconfig_quartus_qip_search_path+<qip_dir_path> Specify root paths in which a deep search will be performed for *.qip files corresponding to *.ip…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "ca55a113-a5d8-4403-b070-3d8e61867edf",
    "title": "Implement Extern Functions Using Autocomplete | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/content-assist/implement-extern-functions-using-autocomplete.html",
    "section": "Implement Extern Functions Using Autocomplete",
    "content": "Implement Extern Functions Using Autocomplete Type the function or task keyword and then press Ctrl + Space to trigger Content Assist . When doing so, the list of proposals includes extern methods that are available to implement. The adjacent Proposal Tooltip includes information about the action that will be performed. Upon choosing the method, a corresponding method stub will be generated at the cursorâs location. The methods may be filtered by typing their return type . Override Constraints Using Autocomplete Use Assignment Pattern for Struct Type Variable",
    "section_path": [],
    "tokens": 87,
    "source": "scraped"
  },
  {
    "id": "8f35fc24-925f-4546-935e-1e9460245b34",
    "title": "Lazy Bring up Resources | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/reference/lazy-bring-up-resources.html",
    "section": "Lazy Bring up Resources",
    "content": "Lazy Bring up Resources You may experience Eclipse Platform slow-downs when project directories contain a large number of files and directories (10s of thousands), either directly or via linked resources, especially when working with slow network mounted filesystems. If you want to avoid such issues or simply avoid the clutter and work only with the files youâre interested in, you can use -include first_level flag when creating the project with the Command Line Interface. Alternatively, you can use the Lazy bring-up resources checkbox , which can be accessed by right-clicking on a project and navigating to Properties â£ DVT â£ Resource Filters . In this case, DVT will bring only the files and directories (without their content) located directly under the project root. If you want to further bring in the contents of a directory, simply double click it. The current configuration of the directories youâre working with in DVT is serialized at the User level settings in a <project>_config.yaml file, located under the lazy_resources directory. This file contains a section for every build configuration of the project. By default, the newly brought directoriesâ content is serialized under the All category and will apply for all the build configurations of the project. To apply some filters only for a particular build configuration, you can manually move them to the correspondent section. After opening a directory, a notification will be displayed in the top right corner of the editor, letting you know that the filters were added in the configuration file. Click the right âOpen config fileâ button to open the configuration file. Click the left â+â button in the notification to inspect the list of directories whose content was brought in. You can close a directory that is no longer needed by right clicking and choosing Close Resources . Note…",
    "section_path": [],
    "tokens": 300,
    "source": "scraped"
  },
  {
    "id": "812c0812-f343-4310-ae7f-26d0364922b0",
    "title": "Autoinstance Using Drag and Drop | DVT SystemVerilog IDE for Eclipse User Guide",
    "url": "https://eda.amiq.com/documentation/eclipse/sv/toc/module-automatic-instantiation/autoinstance-using-drag-and-drop.html",
    "section": "Autoinstance Using Drag and Drop",
    "content": "Autoinstance Using Drag and Drop Design elements can be auto instantiated by dragging them from the Types View into the editor. You can customize what gets generated from menu Window â£ Preferences â£ DVT â£ SystemVerilog â£ Editor â£ Content Assist in the Auto-instantiation section. Autoinstance Using Autocomplete Semantic Search",
    "section_path": [],
    "tokens": 50,
    "source": "scraped"
  }
]